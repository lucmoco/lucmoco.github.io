{"version":3,"sources":["Components/Tasks/Tasks.module.scss","Components/Utility/Field/Field.module.scss","Components/Tags/TagComponent.module.scss","Components/App/App.module.scss","Components/TextEditor/TextEditor.module.scss","Components/Utility/Dialog/Dialog.module.scss","Components/IconDesigner/IconDesigner.module.scss","Components/Utility/Button/Button.module.scss","Components/LoadStatus/LoadStatus.module.scss","Components/Utility/Overlay/Overlay.module.scss","Components/Utility/Spacing.module.scss","Assets/boussole.svg","Components/ErrorBoundary/ErrorBoundary.tsx","Helpers/guidHelper.ts","Services/BoussoleDataService/BoussoleDataService.ts","Services/BoussoleDataStore/BoussoleDataStore.ts","Services/Auth/AuthManager.ts","Services/Auth/AuthManagerProvider.tsx","Services/BoussoleDataStore/BoussoleDataStoreProvider.tsx","Services/BoussoleDataState/BoussoleDataState.tsx","Services/BoussoleDataService/BoussoleDataServiceProvider.tsx","Helpers/tasksHelper.ts","Helpers/cssHelper.ts","Helpers/textHerlper.ts","Helpers/Colors.ts","Components/Tasks/TaskState/TaskStateIndicator.tsx","Components/Utility/Overlay/Overlay.tsx","Components/Utility/Button/Button.tsx","Components/Utility/Dialog/Dialog.tsx","Components/Tasks/TaskState/TaskStateChoice.tsx","Components/Tasks/TaskState/TaskStateEditionDialog.tsx","Components/Utility/Field/Field.tsx","DataModel/Tags.ts","Components/Tags/TagControl.tsx","Components/Tags/TagComponent.tsx","Components/Tags/TagEditionDialog.tsx","Components/Tasks/TaskForm.tsx","Components/Tasks/TaskEditionDialog.tsx","Components/Tasks/TaskComponent.tsx","Assets/SaveImage.tsx","Services/DevMode/DevMode.tsx","Components/App/PageLayout.tsx","Assets/FilterImage.tsx","Components/Tasks/TaskFilter.tsx","Components/Tasks/TaskList.tsx","Components/IconDesigner/IconPreview.tsx","Components/IconDesigner/IconDesigner.tsx","Components/TextEditor/TextEditorState.ts","Components/TextEditor/TextEditor.tsx","Components/TextEditor/AnalysisEditor.tsx","Components/TextEditor2/TextEditor2.tsx","Components/TextEditor2/TextEditor2Playground.tsx","Components/App/AppComponent.tsx","Components/LoadStatus/LoadStatus.tsx","serviceWorker.ts","index.tsx","Components/App/App.tsx"],"names":["module","exports","ErrorBoundary","props","state","isError","error","errorInfo","this","setState","componentStack","children","React","getUniqueDigits","length","result","i","charAt","Math","floor","random","BoussoleDataService","store","createTask","task","setBoussoleData","tasks","id","now","Date","created","modified","updateTask","updates","Error","BoussoleDataStore","authManager","acquireToken","accessToken","fetch","headers","Authorization","response","json","storeModel","getAppState","data","getStoreModel","method","body","JSON","stringify","appState","taskId","push","undefined","tagId","title","description","dateClosed","forEach","storeTask","getTask","scopes","AuthManager","account","application","PublicClientApplication","auth","clientId","authority","handleRedirectPromise","accounts","getAllAccounts","loginRedirect","authenticate","acquireTokenSilent","authResult","AuthManagerContext","createContext","AuthManagerProvider","getNotAuthenticatedComponents","getAuthenticatedComponents","useMemo","useState","authenticated","setAuthenticated","useEffect","a","Provider","value","BoussoleDataStoreContext","BoussoleDataStoreProvider","useContext","useAuthManager","boussoleDataStore","BoussoleDataStateContext","BoussoleDataStateProvider","getNotReadyComponents","getReadyComponents","dataStore","useBoussoleDataStore","useRef","status","loadData","current","boussoleData","ongoingDiskOperation","useCallback","setData","saveData","boussoleDataState","useBoussoleDataState","BoussoleDataServiceContext","BoussoleDataServiceProvider","boussoleDataService","useBoussoleDataService","newState","getClasses","args","filter","name","join","getStateLabel","getColor","color","match","red","parseInt","substr","green","blue","getHexColor","component","round","toString","padStart","getCssColor","TaskColors","next","active","finished","abandoned","getStyle","showCurrentBorder","showNotCurrent","backgroundColor","borderColor","amount","TaskStateIndicator","showText","onClick","className","styles","taskStateIndicator","small","thickBorder","notCurrent","clickable","style","event","stopPropagation","Overlay","overlay","Button","isLight","isWide","button","light","wide","Dialog","buttons","dialog","content","map","onclick","text","TaskStateChoice","onChange","renderState","buttonState","spacingStyles","spaceOutVerticalComponents","taskStateClosed","TaskStateEditionDialog","onClose","Field","label","canMaximize","isMaximized","setIsMaximized","field","AllTags","TagControl","noTag","onRemove","tag","ev","remove","TagComponent","find","t","TagEditionDialog","allTagIdsWithNull","allTagIds","TaskForm","tagEditFormOpen","setTagEditFormOpen","type","target","TaskEditionDialog","editedTask","setEditedTask","TaskComponent","taskEditDialogOpen","setTaskEditDialogOpen","stateEditDialogOpen","setStateEditDialogOpen","SaveImage","xmlns","shapeRendering","textRendering","imageRendering","fillRule","clipRule","viewBox","d","DevModeContext","DevModeProvider","isDev","setIsDev","context","PageLayout","headerControls","to","saveButton","saving","height","width","FilterImage","fill","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","TaskFilter","visible","textRef","focus","tasksFilter","tasksFilterInner","ref","taskFilterText","getStateOrder","compare","task1","task2","localeCompare","toComparable","toLowerCase","normalize","replace","TaskList","filterVisible","setFilterVisible","filterValue","setFilterValue","newTaskFormOpen","setNewTaskFormOpen","stroke","taskList","Object","keys","sort","includes","sortAndFilterTasks","key","tasksButtons","IconPreview","svg","size","iconPreview","dangerouslySetInnerHTML","__html","IconDesigner","svgValue","setSvgValue","iconDesigner","TestTextEditorState","blocks","parts","href","strong","em","selection","countCharacters","block","reduce","total","part","replaceBlock","blockIndex","newBlock","console","warn","index","appendPart","previousPart","splice","subBlock","start","end","partStart","partIndex","partEnd","substring","mergeBlocks","slice","clearSelection","partialBlocks","charIndex","textTyped","partCharIndex","updatedParts","newPart","replacePart","position","deleteContentBackward","updatedBlock","cursorPos","newBlocks","previousBlock","deleteContentForward","insertParagraph","firstBlock","secondBlock","newPosition","node","nodeType","Node","TEXT_NODE","textContent","hasChildNodes","childNodes","computePosition","rootElement","offset","nodes","parentElement","firstLevelElement","nodeName","li","sibling","previousSibling","computeSelection","anchorNode","focusNode","contains","focusOffset","anchorOffset","anchor","renderPart","element","renderParts","elements","subParts","getSelectionNodeAndCharIndex","pos","nodeIndex","itemIndex","item","phrasingPart","getPhrasingPartAtIndex","parent","currentIndex","subPhrasingPart","TextEditor","sectionRef","beforeInputHandler","inputEvent","log","inputType","s","preventDefault","selectionChangeEventHandler","document","getSelection","useLayoutEffect","div","addEventListener","removeEventListener","window","rangeCount","removeRange","getRangeAt","editorCompatibleSelection","removeAllRanges","startNodeAndCharIndex","endNodeAndCharIndex","range","createRange","setStart","setEnd","addRange","ensureStateSelection","wrapper","contentEditable","textEditor","suppressContentEditableWarning","items","currentBlock","render","startContainer","startOffset","endContainer","endOffset","getBrowserSelection","AnalysisEditor","events","setEvent","addEvent","cancelable","isComposing","dataTransfer","types","template","createElement","innerHTML","getData","ranges","getTargetRanges","desc","inputLogger","compositionEventLogger","observer","MutationObserver","mutationsList","mutation","attributeName","observe","attributes","childList","subtree","disconnect","data-montruc","ciao","textAlign","outerHTML","TextEditor2","model","setModel","rootDivRef","TextEditor2Engine","unmount","background","data-key","nextKey","getInnerModel","paragraphs","p","virtualDom","getVirtualDom","renderNodes","vNodes","childNodesWithoutKey","childNodesWithKey","childNode","ELEMENT_NODE","keyStr","dataset","isNaN","nextChildIndex","previousNode","nodeToAppend","vNode","el","createTextNode","tagName","removeAttribute","after","prepend","k","TextEditor2Playground","NoMatch","location","useLocation","pathname","AppComponent","app","path","exact","LoadStatus","done","message","rects","x","y","rx","ry","loadStatus","src","logo","alt","loadBar","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a923f55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"Tasks_taskList__1j01R\",\"tasksFilter\":\"Tasks_tasksFilter__SByHK\",\"visible\":\"Tasks_visible__2gUcH\",\"tasksFilterInner\":\"Tasks_tasksFilterInner__37v1d\",\"taskFilterText\":\"Tasks_taskFilterText__1lomt\",\"tasks\":\"Tasks_tasks__4y0vu\",\"tasksButtons\":\"Tasks_tasksButtons__XJ-pN\",\"task\":\"Tasks_task__3bw5D\",\"title\":\"Tasks_title__1CtZZ\",\"taskForm\":\"Tasks_taskForm__oi8da\",\"button\":\"Tasks_button__25aul\",\"taskStateIndicator\":\"Tasks_taskStateIndicator__3zudG\",\"notCurrent\":\"Tasks_notCurrent__21dv8\",\"clickable\":\"Tasks_clickable__fAQfc\",\"thickBorder\":\"Tasks_thickBorder__3vSP1\",\"small\":\"Tasks_small__eHZhy\",\"taskStateClosed\":\"Tasks_taskStateClosed__2ySBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__1UM57\",\"isMaximized\":\"Field_isMaximized__2M9mM\",\"children\":\"Field_children__3-M6v\",\"label\":\"Field_label__2F_cw\",\"button\":\"Field_button__wBr3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"TagComponent_tag__O9Do5\",\"noTag\":\"TagComponent_noTag__2j8yO\",\"clickable\":\"TagComponent_clickable__lE7XX\",\"active\":\"TagComponent_active__2nCyq\",\"remove\":\"TagComponent_remove__2SJVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__32N6G\",\"saveButton\":\"App_saveButton__1Y4GW\",\"saving\":\"App_saving__19u3L\",\"blinker\":\"App_blinker__3O4-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextEditor_wrapper__2GZg2\",\"textEditor\":\"TextEditor_textEditor__Ivlrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2jZTN\",\"title\":\"Dialog_title__1r951\",\"content\":\"Dialog_content__3EOpS\",\"buttons\":\"Dialog_buttons__1OnQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconDesigner\":\"IconDesigner_iconDesigner__FdLiT\",\"iconPreview\":\"IconDesigner_iconPreview__2680x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button___qM3V\",\"wide\":\"Button_wide__3ejWw\",\"light\":\"Button_light__2KPpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadStatus\":\"LoadStatus_loadStatus__2d1fD\",\"loadBar\":\"LoadStatus_loadBar__eTTVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3WkJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spaceOutVerticalComponents\":\"Spacing_spaceOutVerticalComponents__x2Ed8\"};","module.exports = __webpack_public_path__ + \"static/media/boussole.b5a6f5f8.svg\";","import * as React from 'react';\n\ninterface IErrorBoundaryState {\n  isError: boolean;\n  error: React.ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends React.Component<{}, IErrorBoundaryState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = { isError: false, error: null };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({ isError: true, error: errorInfo });\n  }\n\n  render(): any {\n    if (this.state.isError) {\n      return <div>{this.state.error!.componentStack}</div>;\n    }\n\n    return this.props.children;\n  }\n}\n","const Digits = '0123456789abcdef';\n\nfunction getUniqueDigits(length: number) {\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += Digits.charAt(Math.floor(Math.random() * Digits.length));\n  }\n  return result;\n}\n\nexport function newGuid() {\n  return `${getUniqueDigits(8)}-${getUniqueDigits(4)}-${getUniqueDigits(4)}-${getUniqueDigits(4)}-${getUniqueDigits(\n    12\n  )}`;\n}\n","import { IBoussoleDataService } from './IBoussoleDataService';\r\nimport { Task } from '../../DataModel/Task';\r\nimport { newGuid } from '../../Helpers/guidHelper';\r\nimport { IBoussoleDataState } from '../BoussoleDataState/BoussoleDataState';\r\n\r\nexport class BoussoleDataService implements IBoussoleDataService {\r\n  private store: IBoussoleDataState;\r\n\r\n  constructor(store: IBoussoleDataState) {\r\n    this.store = store;\r\n  }\r\n\r\n  public createTask = (task: Task) => {\r\n    this.store.setBoussoleData((tasks) => {\r\n      const id = newGuid();\r\n      const now = new Date();\r\n      tasks[id] = {\r\n        ...task,\r\n        id,\r\n        created: now,\r\n        modified: now,\r\n      };\r\n      return { ...tasks };\r\n    });\r\n  };\r\n\r\n  public updateTask = (id: string, updates: Partial<Task>) => {\r\n    this.store.setBoussoleData((tasks) => {\r\n      var task = tasks[id];\r\n      if (!task) throw new Error(`No task found with id {id}`);\r\n      tasks[id] = {\r\n        ...task,\r\n        ...updates,\r\n      };\r\n      return { ...tasks };\r\n    });\r\n  };\r\n}\r\n","import { IBoussoleDataStore } from './IBoussoleDataStore';\nimport { IAuthManager } from '../Auth/IAuthManager';\nimport { BoussoleData } from '../../DataModel/BoussoleData';\nimport { Task } from '../../DataModel/Task';\nimport { StoreTask, BoussoleDataStoreModel } from './BoussoleDataStoreModel';\n\nexport class BoussoleDataStore implements IBoussoleDataStore {\n  readonly authManager: IAuthManager;\n\n  public constructor(authManager: IAuthManager) {\n    this.authManager = authManager;\n  }\n\n  async loadData() {\n    var accessToken = await this.authManager.acquireToken();\n\n    var response = await fetch(\n      'https://graph.microsoft.com/v1.0/me/drive/root:/boussole-data-files/notes.json:/content',\n      { headers: { Authorization: 'Bearer ' + accessToken } }\n    );\n\n    var storeModel = await response.json();\n    return getAppState(storeModel);\n  }\n\n  async saveData(data: BoussoleData) {\n    var storeModel = getStoreModel(data);\n    var accessToken = await this.authManager.acquireToken();\n\n    await fetch('https://graph.microsoft.com/v1.0/me/drive/root:/boussole-data-files/notes.json:/content', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'text/plain',\n        Authorization: 'Bearer ' + accessToken,\n      },\n      body: JSON.stringify(storeModel, null, '  '),\n    });\n  }\n}\n\n// *** Conversion from Application Model to Data Store Model and vice versa ***\n\nfunction getStoreTask(task: Task): StoreTask {\n  return {\n    state: task.state === 'created' ? undefined : task.state,\n    tagId: task.tagId || undefined,\n    id: task.id,\n    title: task.title,\n    description: task.description || undefined,\n    created: task.created,\n    modified: task.modified,\n    dateClosed: task.dateClosed,\n  };\n}\n\nfunction getStoreModel(appState: BoussoleData): BoussoleDataStoreModel {\n  const tasks: StoreTask[] = [];\n  for (const taskId in appState) {\n    tasks.push(getStoreTask(appState[taskId]));\n  }\n\n  return { tasks };\n}\n\nfunction getTask(storeTask: StoreTask): Task {\n  return {\n    state: storeTask.state || 'created',\n    tagId: storeTask.tagId || null,\n    id: storeTask.id,\n    title: storeTask.title,\n    description: storeTask.description || '',\n    created: storeTask.created,\n    modified: storeTask.modified,\n    dateClosed: storeTask.dateClosed,\n  };\n}\n\nfunction getAppState(storeModel: BoussoleDataStoreModel): BoussoleData {\n  const tasks: BoussoleData = {};\n\n  storeModel.tasks.forEach((storeTask) => (tasks[storeTask.id] = getTask(storeTask)));\n\n  return tasks;\n}\n","import { IAuthManager } from './IAuthManager';\r\nimport { PublicClientApplication, AccountInfo } from '@azure/msal-browser';\r\n\r\nconst scopes = ['https://graph.microsoft.com/Files.ReadWrite'];\r\n\r\nexport class AuthManager implements IAuthManager {\r\n  account: AccountInfo | undefined;\r\n\r\n  readonly application = new PublicClientApplication({\r\n    auth: {\r\n      clientId: 'c1fef6c7-2dd3-425b-aa1e-e9c94ca00c63',\r\n      authority: 'https://login.microsoftonline.com/consumers/',\r\n    },\r\n  });\r\n\r\n  async authenticate() {\r\n    await this.application.handleRedirectPromise();\r\n    var accounts = this.application.getAllAccounts();\r\n\r\n    if (accounts.length === 0) {\r\n      // a login is needed. The page execution will stop here.\r\n      await this.application.loginRedirect();\r\n    }\r\n\r\n    this.account = accounts[0];\r\n  }\r\n\r\n  async acquireToken() {\r\n    await this.authenticate();\r\n\r\n    var authResult = await this.application.acquireTokenSilent({\r\n      scopes,\r\n      account: this.account!,\r\n    });\r\n    return authResult.accessToken;\r\n  }\r\n}\r\n\r\nexport const getAuthManager = (): IAuthManager => {\r\n  return new AuthManager();\r\n};\r\n","import React from 'react';\r\nimport { IAuthManager } from './IAuthManager';\r\nimport { AuthManager } from './AuthManager';\r\n\r\nconst AuthManagerContext = React.createContext<IAuthManager>(undefined as any);\r\n\r\nexport interface IAuthManagerProviderProps {\r\n  getNotAuthenticatedComponents: () => React.ReactElement | null;\r\n  getAuthenticatedComponents: () => React.ReactElement | null;\r\n}\r\n\r\nexport const AuthManagerProvider: React.FC<IAuthManagerProviderProps> = ({\r\n  getNotAuthenticatedComponents,\r\n  getAuthenticatedComponents,\r\n}) => {\r\n  const authManager = React.useMemo(() => new AuthManager(), []);\r\n  const [authenticated, setAuthenticated] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      await authManager.authenticate();\r\n      setAuthenticated(true);\r\n    })();\r\n  }, [authManager]);\r\n\r\n  return (\r\n    <AuthManagerContext.Provider value={authManager}>\r\n      {authenticated ? getAuthenticatedComponents() : getNotAuthenticatedComponents()}\r\n    </AuthManagerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuthManager = (): IAuthManager => {\r\n  const authManager = React.useContext(AuthManagerContext);\r\n  if (!authManager) {\r\n    throw new Error('Please define an AuthManagerProvider upper in the component tree.');\r\n  }\r\n  return authManager;\r\n};\r\n","import React from 'react';\r\nimport { IBoussoleDataStore } from './IBoussoleDataStore';\r\nimport { BoussoleDataStore } from './BoussoleDataStore';\r\nimport { useAuthManager } from '../Auth/AuthManagerProvider';\r\n\r\nconst BoussoleDataStoreContext = React.createContext<IBoussoleDataStore>(undefined as any);\r\n\r\nexport const BoussoleDataStoreProvider: React.FC = ({ children }) => {\r\n  const authManager = useAuthManager();\r\n  const boussoleDataStore = React.useMemo(() => new BoussoleDataStore(authManager), [authManager]);\r\n  return <BoussoleDataStoreContext.Provider value={boussoleDataStore}>{children}</BoussoleDataStoreContext.Provider>;\r\n};\r\n\r\nexport const useBoussoleDataStore = () => {\r\n  const boussoleDataStore = React.useContext(BoussoleDataStoreContext);\r\n  if (!boussoleDataStore) {\r\n    throw new Error('Please define a BoussoleDataStoreProvider upper in the component tree.');\r\n  }\r\n  return boussoleDataStore;\r\n};\r\n","import React from 'react';\r\nimport { useBoussoleDataStore } from '../BoussoleDataStore/BoussoleDataStoreProvider';\r\nimport { BoussoleData } from '../../DataModel/BoussoleData';\r\n\r\nexport type IBoussoleDataState = {\r\n  boussoleData: BoussoleData;\r\n  ongoingDiskOperation: boolean;\r\n  setBoussoleData: (setData: (boussoleData: BoussoleData) => BoussoleData) => void;\r\n};\r\n\r\nconst BoussoleDataStateContext = React.createContext<IBoussoleDataState>(undefined as any);\r\n\r\nexport interface IBoussoleDataStateProviderProps {\r\n  getNotReadyComponents: () => React.ReactElement | null;\r\n  getReadyComponents: () => React.ReactElement | null;\r\n}\r\n\r\n/** Loads and manages the boussole data. Children are rendered if data is available, otherwise a \"wait\" message is being displayed. */\r\nexport const BoussoleDataStateProvider: React.FC<IBoussoleDataStateProviderProps> = ({\r\n  getNotReadyComponents,\r\n  getReadyComponents,\r\n}) => {\r\n  const dataStore = useBoussoleDataStore();\r\n  const [state, setState] = React.useState<\r\n    Pick<IBoussoleDataState, 'boussoleData' | 'ongoingDiskOperation'> | undefined\r\n  >();\r\n\r\n  const data = React.useRef<BoussoleData>();\r\n\r\n  /** If 'savingAndPendingSave', the latest boussoleData has not yet been saved and needs saving. */\r\n  const status = React.useRef<'saving' | 'savingAndPendingSave'>();\r\n\r\n  // load initially the state. Called only once.\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      data.current = await dataStore.loadData();\r\n      setState({ boussoleData: data.current, ongoingDiskOperation: false });\r\n    })();\r\n  }, [dataStore]);\r\n\r\n  const setBoussoleData = React.useCallback(\r\n    (setData: (boussoleData: BoussoleData) => BoussoleData) =>\r\n      (async () => {\r\n        data.current = setData(data.current!);\r\n        setState({ boussoleData: data.current, ongoingDiskOperation: true });\r\n\r\n        if (status.current) {\r\n          status.current = 'savingAndPendingSave';\r\n          return;\r\n        }\r\n\r\n        while (true) {\r\n          status.current = 'saving';\r\n          await dataStore.saveData(data.current);\r\n\r\n          if (status.current === 'saving') {\r\n            // no more update pending.\r\n            status.current = undefined;\r\n            setState({ boussoleData: data.current, ongoingDiskOperation: false });\r\n            return;\r\n          }\r\n        }\r\n      })(),\r\n    [dataStore]\r\n  );\r\n\r\n  const boussoleDataState = React.useMemo<IBoussoleDataState | undefined>(\r\n    () => state && { ...state, setBoussoleData },\r\n    [state, setBoussoleData]\r\n  );\r\n\r\n  if (!boussoleDataState) {\r\n    return <>{getNotReadyComponents()}</>;\r\n  }\r\n\r\n  return (\r\n    <BoussoleDataStateContext.Provider value={boussoleDataState}>\r\n      {getReadyComponents()}\r\n    </BoussoleDataStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBoussoleDataState = () => {\r\n  const boussoleDataState = React.useContext(BoussoleDataStateContext);\r\n  if (!boussoleDataState) {\r\n    throw new Error('Please define a BoussoleDataStateProvider upper in the component tree.');\r\n  }\r\n  return boussoleDataState;\r\n};\r\n","import React from 'react';\r\nimport { IBoussoleDataService } from './IBoussoleDataService';\r\nimport { BoussoleDataService } from './BoussoleDataService';\r\nimport { useBoussoleDataState } from '../BoussoleDataState/BoussoleDataState';\r\n\r\nconst BoussoleDataServiceContext = React.createContext<IBoussoleDataService>(undefined as any);\r\n\r\nexport const BoussoleDataServiceProvider: React.FC = ({ children }) => {\r\n  const boussoleDataState = useBoussoleDataState();\r\n  const boussoleDataService = React.useMemo(() => new BoussoleDataService(boussoleDataState), [boussoleDataState]);\r\n\r\n  return (\r\n    <BoussoleDataServiceContext.Provider value={boussoleDataService!}>{children}</BoussoleDataServiceContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBoussoleDataService = () => {\r\n  const boussoleDataService = React.useContext(BoussoleDataServiceContext);\r\n  if (!boussoleDataService) {\r\n    throw new Error('Please define a BoussoleDataServiceProvider upper in the component tree.');\r\n  }\r\n  return boussoleDataService;\r\n};\r\n","import { Task, TaskState } from '../DataModel/Task';\n\nexport const getNewTask = (): Task => ({\n  id: '',\n  tagId: null,\n  state: 'created',\n  title: '',\n  description: '',\n  created: new Date(),\n  modified: new Date(),\n});\n\nexport const newState = (state: TaskState): Partial<Task> => {\n  return {\n    state,\n    dateClosed: state === 'finished' || state === 'abandoned' ? new Date() : undefined,\n  };\n};\n","export const getClasses = (...args: (string | null | undefined | false)[]): string => {\n  return args.filter((name) => !!name).join(' ');\n};\n","import { TaskState } from '../DataModel/Task';\n\nexport const getStateLabel = (state: TaskState): string => {\n  switch (state) {\n    case 'created':\n      return 'En attente';\n    case 'in-backlog':\n      return 'Dans le radar';\n    case 'next':\n      return 'Prochainement';\n    case 'active':\n      return 'En cours';\n    case 'finished':\n      return 'Terminée';\n    case 'abandoned':\n      return 'Abandonnée';\n  }\n};\n","import { TaskState } from '../DataModel/Task';\r\n\r\nexport type Color = {\r\n  /** red component, 0-255 */\r\n  red: number;\r\n\r\n  /** green component, 0-255 */\r\n  green: number;\r\n\r\n  /** blue component, 0-255 */\r\n  blue: number;\r\n};\r\n\r\nexport const getColor = (color: string): Color => {\r\n  if (!color.match(/^#[0-9a-fA-F]{6}$/)) {\r\n    throw new Error('invalid color');\r\n  }\r\n\r\n  return {\r\n    red: parseInt(color.substr(1, 2), 16),\r\n    green: parseInt(color.substr(3, 2), 16),\r\n    blue: parseInt(color.substr(5, 2), 16),\r\n  };\r\n};\r\n\r\nconst getHexColor = (component: number): string => {\r\n  if (component < 0) {\r\n    component = 0;\r\n  } else if (component > 255) {\r\n    component = 255;\r\n  }\r\n\r\n  return Math.round(component).toString(16).padStart(2, '0');\r\n};\r\n\r\nexport const getCssColor = (color: Color): string => {\r\n  return `#${getHexColor(color.red)}${getHexColor(color.green)}${getHexColor(color.blue)}`;\r\n};\r\n\r\nexport const mix = (color1: Color, color2: Color, coefficient: number = 0.5): Color => {\r\n  return {\r\n    red: color1.red * (1 - coefficient) + color2.red * coefficient,\r\n    green: color1.green * (1 - coefficient) + color2.green * coefficient,\r\n    blue: color1.blue * (1 - coefficient) + color2.blue * coefficient,\r\n  };\r\n};\r\n\r\n/**\r\n * Computes a darker version of a color.\r\n * @param color The initial color.\r\n * @param amount How much darker the new color must be. Ranges from 0 (unchanged) to 1 (black).\r\n */\r\nexport const darker = (color: Color, amount: number): Color => {\r\n  return {\r\n    red: color.red * (1 - amount),\r\n    green: color.green * (1 - amount),\r\n    blue: color.blue * (1 - amount),\r\n  };\r\n};\r\n\r\n/**\r\n * Computes a grayscale version of a color.\r\n * @param color The initial color.\r\n * @param amount How much gray the new color must be. Ranges from 0 (unchanged) to 1 (complete grayscale).\r\n */\r\nexport const greyscale = (color: Color, amount: number): Color => {\r\n  var grey = 0.3 * color.red + 0.59 * color.green + 0.11 * color.blue;\r\n\r\n  return {\r\n    red: color.red * (1 - amount) + grey * amount,\r\n    green: color.green * (1 - amount) + grey * amount,\r\n    blue: color.blue * (1 - amount) + grey * amount,\r\n  };\r\n};\r\n\r\nexport const TaskColors: {\r\n  [state in TaskState]: Color;\r\n} = {\r\n  created: getColor('#dadada'),\r\n  'in-backlog': getColor('#ffa9f2'),\r\n  next: getColor('#aa8afd'),\r\n  active: getColor('#66dfff'),\r\n  finished: getColor('#6eef00'),\r\n  abandoned: getColor('#999999'),\r\n};\r\n","import React, { CSSProperties } from 'react';\nimport styles from '../Tasks.module.scss';\nimport { getClasses } from '../../../Helpers/cssHelper';\nimport { TaskState } from '../../../DataModel/Task';\nimport { getStateLabel } from '../../../Helpers/textHerlper';\nimport { getCssColor, TaskColors, darker } from '../../../Helpers/Colors';\n\nexport type TaskStateDisplayProps = {\n  /** State to be rendered. */\n  state: TaskState;\n  /** Show the text. */\n  showText?: boolean;\n  /** Display a thick border. */\n  showCurrentBorder?: boolean;\n  /** Display an attenuated color. */\n  showNotCurrent?: boolean;\n  /** Display as a button and call onClick when clicked. If undefined, the control is not clickable. */\n  onClick?: () => void;\n};\n\nconst getStyle = (state: TaskState, showCurrentBorder?: boolean, showNotCurrent?: boolean): CSSProperties => {\n  return {\n    backgroundColor: getCssColor(TaskColors[state]),\n    borderColor: getCssColor(darker(TaskColors[state], 0.2)),\n  };\n};\n\n/** Shows a task state as a rounded rectangle, with a background color corresponding to the state, and optionally the state's text label. */\nexport const TaskStateIndicator: React.FC<TaskStateDisplayProps> = ({\n  state,\n  showText,\n  showCurrentBorder,\n  showNotCurrent,\n  onClick,\n}) => {\n  return (\n    <div\n      title={showText ? undefined : getStateLabel(state)}\n      className={getClasses(\n        styles.taskStateIndicator,\n        !showText && styles.small,\n        showCurrentBorder && styles.thickBorder,\n        showNotCurrent && styles.notCurrent,\n        onClick && styles.clickable\n      )}\n      style={getStyle(state, showCurrentBorder, showNotCurrent)}\n      onClick={\n        onClick\n          ? (event) => {\n              event.stopPropagation();\n              onClick();\n            }\n          : undefined\n      }\n    >\n      {showText && getStateLabel(state)}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Overlay.module.scss';\n\nexport const Overlay: FunctionComponent<{}> = ({ children }) => {\n  return <div className={styles.overlay}>{children}</div>;\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Button.module.scss';\nimport { getClasses } from '../../../Helpers/cssHelper';\n\nexport interface ButtonProps {\n  isLight?: boolean;\n  isWide?: boolean;\n  title?: string;\n  onClick?: () => void;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = ({ isLight, isWide, title, onClick, children }) => {\n  return (\n    <div\n      className={getClasses(styles.button, isLight && styles.light, isWide && styles.wide)}\n      title={title}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Dialog.module.scss';\nimport { Overlay } from '../Overlay/Overlay';\nimport { Button } from '../Button/Button';\n\nexport interface ButtonProps {\n  text: string;\n  onclick: () => void;\n}\n\nexport interface DialogProps {\n  title?: string;\n  buttons?: ButtonProps[];\n}\n\nexport const Dialog: FunctionComponent<DialogProps> = ({ title, buttons, children }) => {\n  return (\n    <Overlay>\n      <div className={styles.dialog}>\n        {title && <div className={styles.title}>{title}</div>}\n        <div className={styles.content}>{children}</div>\n        {buttons && (\n          <div className={styles.buttons}>\n            {buttons.map((button) => (\n              <Button isWide onClick={button.onclick}>\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        )}\n      </div>\n    </Overlay>\n  );\n};\n","import React from 'react';\nimport styles from '../Tasks.module.scss';\nimport spacingStyles from '../../Utility/Spacing.module.scss';\nimport { TaskState } from '../../../DataModel/Task';\nimport { TaskStateIndicator } from './TaskStateIndicator';\n\nexport type TaskStateChoiceProps = {\n  state: TaskState;\n  onChange: (state: TaskState) => void;\n};\n\n/** Shows all possible task states and enables selecting a state.\n *  Does not commit any action, but calls onChange whenever a new state is selected. */\nexport const TaskStateChoice: React.FC<TaskStateChoiceProps> = ({ state, onChange }) => {\n  const renderState = React.useCallback(\n    (buttonState: TaskState) => {\n      return (\n        <TaskStateIndicator\n          state={buttonState}\n          showText\n          showCurrentBorder={buttonState === state}\n          showNotCurrent={buttonState !== state}\n          onClick={\n            buttonState === state\n              ? undefined\n              : () => {\n                  onChange(buttonState);\n                }\n          }\n        />\n      );\n    },\n    [state, onChange]\n  );\n\n  return (\n    <div className={spacingStyles.spaceOutVerticalComponents}>\n      {renderState('created')}\n      {renderState('in-backlog')}\n      {renderState('next')}\n      {renderState('active')}\n      <div className={styles.taskStateClosed}>\n        {renderState('finished')}\n        {renderState('abandoned')}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TaskState } from '../../../DataModel/Task';\nimport { Dialog } from '../../Utility/Dialog/Dialog';\nimport { TaskStateChoice } from './TaskStateChoice';\n\nexport type TaskStateEditionDialogProps = {\n  /** The task to be rendered. */\n  state: TaskState;\n  /** Triggered when the task is being clicked. */\n  onClose: (state?: TaskState) => void;\n};\n\n/** Edition of a task's state, displays all possible states. Calls onClose when a state is selected, or when \"Cancel\" is clicked. */\nexport const TaskStateEditionDialog: React.FunctionComponent<TaskStateEditionDialogProps> = ({ state, onClose }) => {\n  return (\n    <Dialog\n      buttons={[\n        {\n          text: 'Annuler',\n          onclick: () => {\n            onClose();\n          },\n        },\n      ]}\n    >\n      <TaskStateChoice state={state} onChange={onClose} />\n    </Dialog>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Field.module.scss';\nimport { getClasses } from '../../../Helpers/cssHelper';\n\nexport interface FieldProps {\n  label: string;\n  canMaximize?: boolean;\n}\n\nexport const Field: FunctionComponent<FieldProps> = ({ label, canMaximize, children }) => {\n  const [isMaximized, setIsMaximized] = React.useState(false);\n\n  return (\n    <div className={getClasses(styles.field, isMaximized && styles.isMaximized)}>\n      <div className={styles.label}>\n        {canMaximize && (\n          <div className={styles.button} onClick={() => setIsMaximized(!isMaximized)}>\n            🗖\n          </div>\n        )}{' '}\n        {label}\n      </div>\n      <div className={styles.children}>{children}</div>\n    </div>\n  );\n};\n","export type Tag = {\r\n  id: string;\r\n  name: string;\r\n};\r\n\r\nexport const AllTags: Tag[] = [\r\n  {\r\n    id: 'cp',\r\n    name: 'Conseil de paroisse',\r\n  },\r\n  {\r\n    id: 'scouts',\r\n    name: 'Scouts',\r\n  },\r\n  {\r\n    id: 'travaux',\r\n    name: 'Travaux maison',\r\n  },\r\n  {\r\n    id: 'achats',\r\n    name: 'Achats',\r\n  },\r\n  {\r\n    id: 'jardin',\r\n    name: 'Jardin',\r\n  },\r\n  {\r\n    id: 'loisirs',\r\n    name: 'Loisirs',\r\n  },\r\n  {\r\n    id: 'maison',\r\n    name: 'Entretien, rangement maison',\r\n  },\r\n  {\r\n    id: 'administration',\r\n    name: 'Administration',\r\n  },\r\n  {\r\n    id: 'vie-famille',\r\n    name: 'Vie de famille, spiritualité',\r\n  },\r\n  {\r\n    id: 'sport-santé',\r\n    name: 'Sport, santé',\r\n  },\r\n  {\r\n    id: 'coup-d-pouce',\r\n    name: \"Coup d'Pouce\",\r\n  },\r\n  {\r\n    id: 'église',\r\n    name: 'Église, END',\r\n  },\r\n  {\r\n    id: 'pro',\r\n    name: 'Professionnel',\r\n  },\r\n];\r\n\r\nexport const getTag = (tagId: string | undefined): Tag | undefined => {\r\n  return AllTags.find((tag) => tag.id === tagId);\r\n};\r\n","import React from 'react';\r\nimport styles from './TagComponent.module.scss';\r\nimport { getClasses } from '../../Helpers/cssHelper';\r\n\r\nexport type TagControlProps = {\r\n  /** Text to be rendered in the tag. */\r\n  text: string;\r\n\r\n  /** If true, the tag is rendered with a more prominent color. */\r\n  active?: boolean;\r\n\r\n  /** If true, the tag is rendered gray instead of colored. */\r\n  noTag?: boolean;\r\n\r\n  /** If not undefined, the tag is clickable and onClick() is called when the tag is clicked. */\r\n  onClick?: () => void;\r\n\r\n  /** If not undefined, a cross is rendered, and \"onRemove\" is called when the cross is clicked. */\r\n  onRemove?: () => void;\r\n};\r\n\r\n/** Raw rendering of a tag. */\r\nexport const TagControl: React.FunctionComponent<TagControlProps> = ({ text, active, noTag, onClick, onRemove }) => {\r\n  return (\r\n    <div\r\n      className={getClasses(styles.tag, onClick && styles.clickable, active && styles.active, noTag && styles.noTag)}\r\n      onClick={\r\n        onClick\r\n          ? (ev) => {\r\n              ev.stopPropagation();\r\n              onClick!();\r\n            }\r\n          : undefined\r\n      }\r\n    >\r\n      {text}\r\n      {onRemove && (\r\n        <span\r\n          className={styles.remove}\r\n          onClick={(ev) => {\r\n            ev.stopPropagation();\r\n            onRemove!();\r\n          }}\r\n        >\r\n          X\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AllTags } from '../../DataModel/Tags';\r\nimport { TagControl } from './TagControl';\r\n\r\nexport type TagComponentProps = {\r\n  /** ID of the tag to be rendered. null means \"no tag\".*/\r\n  tagId: string | null;\r\n\r\n  /** If true, the tag is rendered with a more prominent color. */\r\n  active?: boolean;\r\n\r\n  /** If defined, the tag is clickable, and onClick is called when the tag is clicked. */\r\n  onClick?: (tagId: string | null) => void;\r\n\r\n  /** If not undefined, a cross is rendered, and \"onRemove\" is called when the cross is clicked. */\r\n  onRemove?: () => void;\r\n};\r\n\r\n/** displays a tag, calls onClick when the tag is clicked (if onClick is not undefined). */\r\nexport const TagComponent: React.FunctionComponent<TagComponentProps> = ({ tagId, active, onClick, onRemove }) => {\r\n  const tag = AllTags.find((t) => t.id === tagId);\r\n  return (\r\n    <TagControl\r\n      text={tag ? tag.name : 'Pas de catégorie'}\r\n      active={active}\r\n      noTag={tagId === null}\r\n      onClick={onClick ? () => onClick(tagId) : undefined}\r\n      onRemove={onRemove}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Dialog } from '../Utility/Dialog/Dialog';\r\nimport { TagComponent } from './TagComponent';\r\nimport { AllTags } from '../../DataModel/Tags';\r\n\r\nexport type TagEditionDialogProps = {\r\n  tagId: string | null | undefined;\r\n  onChange: (tagId: string | null) => void;\r\n  onClose: () => void;\r\n};\r\n\r\n/** Edition of a task's state, displays all possible states. Calls onClose when a state is selected, or when \"Cancel\" is clicked. */\r\nexport const TagEditionDialog: React.FunctionComponent<TagEditionDialogProps> = ({ tagId, onChange, onClose }) => {\r\n  var allTagIdsWithNull = React.useMemo<(string | null)[]>(() => {\r\n    const allTagIds = AllTags.map((tag) => tag.id);\r\n    if (tagId === null || tagId === undefined) {\r\n      return [null, ...allTagIds];\r\n    }\r\n    return [tagId, null, ...allTagIds.filter((id) => id !== tagId)];\r\n  }, [tagId]);\r\n\r\n  return (\r\n    <Dialog\r\n      buttons={[\r\n        {\r\n          text: 'Annuler',\r\n          onclick: () => {\r\n            onClose();\r\n          },\r\n        },\r\n      ]}\r\n    >\r\n      {allTagIdsWithNull.map((id) => (\r\n        <TagComponent tagId={id} active={id === tagId} onClick={id === tagId ? undefined : onChange} />\r\n      ))}\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from 'react';\nimport { TaskStateChoice } from './TaskState/TaskStateChoice';\nimport { Field } from '../Utility/Field/Field';\nimport { newState } from '../../Helpers/tasksHelper';\nimport { Task } from '../../DataModel/Task';\nimport { TagComponent } from '../Tags/TagComponent';\nimport { TagEditionDialog } from '../Tags/TagEditionDialog';\n\nexport type TaskFormProps = {\n  task: Task;\n  onChange: (task: Task) => void;\n};\n\n/** Enables editing a task's data. Calls onChange when any change occurs. Does not have buttons. */\nexport const TaskForm: React.FC<TaskFormProps> = ({ task, onChange }) => {\n  const [tagEditFormOpen, setTagEditFormOpen] = React.useState(false);\n  return (\n    <>\n      <TaskStateChoice state={task.state} onChange={(state) => onChange({ ...task, ...newState(state) })} />\n      <Field label=\"titre\">\n        <input type=\"text\" value={task.title} onChange={(event) => onChange({ ...task, title: event.target.value })} />\n      </Field>\n      <Field label=\"catégorie\">\n        <TagComponent\n          tagId={task.tagId}\n          active\n          onClick={() => {\n            setTagEditFormOpen(true);\n          }}\n        />\n      </Field>\n      <Field label=\"description\" canMaximize>\n        <textarea\n          value={task.description}\n          onChange={(event) => onChange({ ...task, description: event.target.value })}\n        />\n      </Field>\n      {tagEditFormOpen && (\n        <TagEditionDialog\n          tagId={task.tagId}\n          onChange={(tagId) => {\n            onChange({ ...task, tagId });\n            setTagEditFormOpen(false);\n          }}\n          onClose={() => setTagEditFormOpen(false)}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { useBoussoleDataService } from '../../Services/BoussoleDataService/BoussoleDataServiceProvider';\nimport { getNewTask } from '../../Helpers/tasksHelper';\nimport { Task } from '../../DataModel/Task';\nimport { Dialog } from '../Utility/Dialog/Dialog';\nimport { TaskForm } from './TaskForm';\n\nexport type TaskEditionDialogProps = {\n  task: Task | undefined;\n  onClose: () => void;\n};\n\n/** Enables editing a task. Responsible for creating or updating the task. Calls onClose() when done. */\nexport function TaskEditionDialog(props: TaskEditionDialogProps) {\n  const id = useMemo(() => (props.task ? props.task.id : undefined), [props.task]);\n  const [editedTask, setEditedTask] = useState<Task>(props.task || getNewTask());\n  const { createTask, updateTask } = useBoussoleDataService();\n\n  const onSave = () => {\n    if (id) {\n      updateTask(id, editedTask);\n    } else {\n      createTask(editedTask);\n    }\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      title={id ? 'Modifier une tâche' : 'Nouvelle tâche'}\n      buttons={[\n        { text: 'Valider', onclick: onSave },\n        { text: 'Annuler', onclick: props.onClose },\n      ]}\n    >\n      <TaskForm task={editedTask} onChange={setEditedTask} />\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport styles from './Tasks.module.scss';\nimport { useBoussoleDataService } from '../../Services/BoussoleDataService/BoussoleDataServiceProvider';\nimport { newState } from '../../Helpers/tasksHelper';\nimport { Task } from '../../DataModel/Task';\nimport { TaskStateIndicator } from './TaskState/TaskStateIndicator';\nimport { TaskStateEditionDialog } from './TaskState/TaskStateEditionDialog';\nimport { TaskEditionDialog } from './TaskEditionDialog';\n\nexport type TaskComponentProps = {\n  /** The task to be rendered. */\n  task: Task;\n};\n\n/** Renders a single task in the list of tasks. */\nexport const TaskComponent: React.FunctionComponent<TaskComponentProps> = ({ task }) => {\n  const { updateTask } = useBoussoleDataService();\n  const [taskEditDialogOpen, setTaskEditDialogOpen] = React.useState(false);\n  const [stateEditDialogOpen, setStateEditDialogOpen] = React.useState(false);\n\n  return (\n    <>\n      <div onClick={() => setTaskEditDialogOpen(true)} className={styles.task}>\n        <div className={styles.title}>{task.title}</div>\n        <TaskStateIndicator state={task.state} onClick={() => setStateEditDialogOpen(true)} />\n      </div>\n      {taskEditDialogOpen && <TaskEditionDialog task={task} onClose={() => setTaskEditDialogOpen(false)} />}\n      {stateEditDialogOpen && (\n        <TaskStateEditionDialog\n          state={task.state}\n          onClose={(state) => {\n            setStateEditDialogOpen(false);\n            if (state) updateTask(task.id, newState(state));\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nexport const SaveImage = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    shapeRendering=\"geometricPrecision\"\n    textRendering=\"geometricPrecision\"\n    imageRendering=\"optimizeQuality\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    viewBox=\"0 0 640 640\"\n    {...props}\n  >\n    <path d=\"M626.689 15.414zm-55.654 574.472v.011H459.336c-2.09 0-3.79-1.689-3.79-3.767V416.97l-.013-.508c0-4.701-.862-8.599-2.575-11.587a23.657 23.657 0 0 0-1.05-1.618 13.646 13.646 0 0 0-1.23-1.394l-.105-.13c-1.571-1.559-3.544-2.764-5.859-3.59l-1.287-.39-.201-.071h-.035c-2.15-.579-4.571-.874-7.205-.886h-.26l-.402-.012H204.262c-4.618 0-8.433.886-11.35 2.528l-.095.07-1.382.875-.212.189c-.485.354-.957.791-1.394 1.193l-.083.094-.035.036c-3.213 3.271-4.82 8.197-4.82 14.705l-.023.2V586.13h-.012c0 2.08-1.724 3.756-3.78 3.756h-63.874a3.744 3.744 0 0 1-2.681-1.11l-62.906-62.894a3.901 3.901 0 0 1-1.512-3.083V69.474l-.024-.402c0-4.323.78-7.949 2.292-10.795h.011c.284-.555.58-1.016.898-1.5l.13-.166a9.743 9.743 0 0 1 1.3-1.535l.046-.083.13-.13h.012c1.323-1.322 2.965-2.35 4.82-3.094l.188-.095.095-.035.082-.06.945-.318v.012l.071-.036c2.197-.708 4.713-1.05 7.512-1.11l.46-.035h54.202c2.079 0 3.791 1.689 3.791 3.767v227.436c0 2.729.237 5.35.697 7.796a36.732 36.732 0 0 0 2.02 6.992l.07.106.013.036v.012a38.87 38.87 0 0 0 3.472 6.52c1.347 2.019 2.894 4.027 4.713 5.905l.118.094.023.036.036.012a38.841 38.841 0 0 0 8.433 6.638l.06.011.07.024.07.035 1.678.886.024.012 2.09.933v.012l.036.012.012.012h.035v.011c1.713.709 3.472 1.347 5.232 1.784h.036l.165.023.047.012h.178l1.346.284v.012c2.362.448 4.854.708 7.382.732l.106-.012h309.181c5.386 0 10.323-.933 14.847-2.787l.07-.048c4.536-1.866 8.682-4.677 12.473-8.421l.142-.177c1.866-1.878 3.579-3.91 4.996-6.024a36.432 36.432 0 0 0 3.45-6.342l.011-.06.035-.059.036-.118a35.794 35.794 0 0 0 2.138-6.98l.023-.142c.46-2.457.685-5.067.685-7.772V53.871c0-2.079 1.725-3.78 3.827-3.78h53.765c3.047 0 5.693.367 8.008 1.075 2.492.78 4.618 2.032 6.26 3.674 1.346 1.334 2.433 3.023 3.189 4.972l-.024.012.07.095.32.909h-.024l.06.13c.72 2.138 1.05 4.654 1.11 7.406l.047.448v.284l-.024.082v501.727c0 2.906-.378 5.587-1.075 7.855l-.059.165v.012l-.012.118-.413 1.122h-.012l-.118.296-.472 1.039-.071.2-.13.213-.012-.012-.154.308-.755 1.169h-.012l-.26.401-.732.898-.32.354c-.767.815-1.7 1.56-2.74 2.186a17.6 17.6 0 0 1-2.881 1.358l-.331.118c-.839.283-1.76.52-2.74.72l-.095.012-.059.012-.094.024-.45.07-.106.024h-.023l-.083.012c-1.17.165-2.54.283-3.957.307h-.696zM467.912 51.155l-296.248-1.063V262.42h-.024c0 2.386.295 4.465.886 6.272.154.295.224.543.343.78a10.107 10.107 0 0 0 2.078 3.153l.154.142v.011c.295.296.59.544.874.768.307.26.697.496 1.063.709 2.055 1.193 4.795 1.76 8.232 1.76v.011l269 1.312v-.012h.023v.012c4.724 0 8.197-1.099 10.346-3.308 2.186-2.22 3.284-5.716 3.296-10.535h-.024V51.155zM221.177 426.502h79.23v.023c1.842 0 3.377 1.5 3.377 3.343V586.53c0 1.843-1.535 3.367-3.378 3.367h-79.23v-.012c-1.83 0-3.365-1.512-3.365-3.355V429.868c0-1.842 1.535-3.366 3.366-3.366zm405.596 197.672zm-576.15-622h543.55c6.355 0 12.237 1.122 17.67 3.342l2.646 1.17c4.394 2.137 8.469 5.066 12.272 8.799l3.39 3.85 2.929 4.075c4.594 7.217 6.933 15.425 6.933 24.591v543.538c0 6.33-1.122 12.225-3.354 17.693-2.21 5.445-5.516 10.418-9.922 14.988a46.306 46.306 0 0 1-7.724 6.32l-1.323.885a40.453 40.453 0 0 1-5.823 2.989c-5.457 2.29-11.35 3.413-17.705 3.413H90.475l-1.276-1.287-83.576-83.576-5.48-3.638V47.846C-1.7 27.544 14.683 7.89 32.907 5.493c5.469-2.209 11.374-3.319 17.717-3.319z\" />\n  </svg>\n);\n","import React from 'react';\r\n\r\nexport type DevModeContext = {\r\n  isDev: boolean;\r\n  setIsDev: (isDev: boolean) => void;\r\n};\r\n\r\nconst DevModeContext = React.createContext<DevModeContext>(undefined as any);\r\n\r\nexport const DevModeProvider: React.FC = ({ children }) => {\r\n  const [isDev, setIsDev] = React.useState(false);\r\n\r\n  const context = React.useMemo<DevModeContext>(() => ({ isDev, setIsDev }), [isDev]);\r\n  return <DevModeContext.Provider value={context}>{children}</DevModeContext.Provider>;\r\n};\r\n\r\nexport const useDevMode = (): DevModeContext => React.useContext(DevModeContext);\r\n","import React from 'react';\nimport styles from './App.module.scss';\nimport { Link } from 'react-router-dom';\nimport { SaveImage } from '../../Assets/SaveImage';\nimport { getClasses } from '../../Helpers/cssHelper';\nimport { useDevMode } from '../../Services/DevMode/DevMode';\nimport { useBoussoleDataState } from '../../Services/BoussoleDataState/BoussoleDataState';\n\ntype PageLayoutProps = {\n  /** optional header controls to be rendered */\n  headerControls?: React.ReactElement;\n};\n\n/** renders a header with various buttons and the children as the content */\nexport const PageLayout: React.FunctionComponent<PageLayoutProps> = ({ headerControls, children }) => {\n  const { isDev, setIsDev } = useDevMode();\n  const { ongoingDiskOperation } = useBoussoleDataState();\n\n  return (\n    <>\n      <header>\n        {isDev && (\n          <>\n            <Link to=\"/editor2\">Nouvel éditeur</Link>\n            <Link to=\"/editor-analysis\">Analyse éditeur</Link>\n            <Link to=\"/editor-test\">Test éditeur</Link>\n            <Link to=\"/icon-designer\">Éditeur d'icônes</Link>\n          </>\n        )}\n        {!isDev && <button onClick={() => setIsDev(true)}>&lt;/&gt;</button>}\n        <Link to=\"/home\">Home</Link>\n        <Link to=\"/tasks\">Tâches</Link>\n        <span title={ongoingDiskOperation ? \"En cours d'enregistrement...\" : 'Toutes les données sont sauvegardées.'}>\n          <SaveImage\n            className={getClasses(styles.saveButton, ongoingDiskOperation && styles.saving)}\n            height={20}\n            width={20}\n          />\n        </span>\n        {headerControls}\n      </header>\n      <section>{children}</section>\n    </>\n  );\n};\n","import React from 'react';\nexport const FilterImage = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg {...props} viewBox=\"0 0 10 10\">\n    <path\n      d=\"M 0.25,1.5 4.25,6 v 3.75 H 5.75 V 6 l 4,-4.5 v -1.25 l -9.5,0 z\"\n      fill=\"none\"\n      strokeWidth={0.5}\n      strokeLinecap=\"butt\"\n      strokeLinejoin=\"miter\"\n      strokeMiterlimit={4}\n    />\n  </svg>\n);\n","import React from 'react';\nimport styles from './Tasks.module.scss';\nimport { getClasses } from '../../Helpers/cssHelper';\nimport { TagControl } from '../Tags/TagControl';\nimport { TagEditionDialog } from '../Tags/TagEditionDialog';\nimport { TagComponent } from '../Tags/TagComponent';\n\nexport type TaskFilterValue = {\n  text: string;\n  /** tasks with that ID must be displayed. null means \"tasks with no tag\". undefined means \"do not filter on tag\". */\n  tagId: string | undefined | null;\n};\n\ntype TaskFilterProps = {\n  visible: boolean;\n  value: TaskFilterValue;\n  onChange: (filter: TaskFilterValue) => void;\n};\n\nexport const TaskFilter: React.FunctionComponent<TaskFilterProps> = ({ visible, value, onChange }) => {\n  var textRef = React.useRef<HTMLInputElement | null>(null);\n  const [tagEditFormOpen, setTagEditFormOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    if (visible && textRef.current) {\n      textRef.current.focus();\n    }\n  }, [visible]);\n\n  return (\n    <div className={getClasses(styles.tasksFilter, visible && styles.visible)}>\n      <div className={styles.tasksFilterInner}>\n        <input\n          ref={textRef}\n          className={styles.taskFilterText}\n          value={value.text}\n          onChange={(ev) => onChange({ ...value, text: ev.target.value })}\n        />\n        {value.tagId === undefined ? (\n          <TagControl text=\"...\" noTag onClick={() => setTagEditFormOpen(true)} />\n        ) : (\n          <TagComponent\n            tagId={value.tagId}\n            active\n            onClick={() => setTagEditFormOpen(true)}\n            onRemove={() => onChange({ ...value, tagId: undefined })}\n          />\n        )}\n      </div>\n      {tagEditFormOpen && (\n        <TagEditionDialog\n          tagId={value.tagId}\n          onChange={(tagId) => {\n            onChange({ ...value, tagId });\n            setTagEditFormOpen(false);\n          }}\n          onClose={() => setTagEditFormOpen(false)}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './Tasks.module.scss';\nimport { TaskComponent } from './TaskComponent';\nimport { TaskEditionDialog } from './TaskEditionDialog';\nimport { BoussoleData } from '../../DataModel/BoussoleData';\nimport { Task, TaskState } from '../../DataModel/Task';\nimport { Button } from '../Utility/Button/Button';\nimport { PageLayout } from '../App/PageLayout';\nimport { FilterImage } from '../../Assets/FilterImage';\nimport { TaskFilter, TaskFilterValue } from './TaskFilter';\nimport { useBoussoleDataState } from '../../Services/BoussoleDataState/BoussoleDataState';\n\nfunction getStateOrder(state: TaskState): number {\n  switch (state) {\n    case 'active':\n      return 0;\n    case 'next':\n      return 1;\n    case 'in-backlog':\n      return 2;\n    case 'created':\n      return 3;\n    case 'finished':\n      return 4;\n    case 'abandoned':\n      return 5;\n  }\n}\n\nfunction compare(task1: Task, task2: Task): number {\n  if (task1.state !== task2.state) {\n    return getStateOrder(task1.state) < getStateOrder(task2.state) ? -1 : 1;\n  }\n\n  // both tasks have the same state\n\n  return task1.title.localeCompare(task2.title);\n}\n\nfunction toComparable(text: string): string {\n  return text\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction sortAndFilterTasks(boussoleData: BoussoleData, filter?: TaskFilterValue): Task[] {\n  var result = Object.keys(boussoleData)\n    .map((id) => boussoleData[id])\n    .sort(compare);\n\n  if (filter) {\n    const text = filter.text ? toComparable(filter.text) : undefined;\n    result = result.filter((task) => {\n      if (text && !toComparable(task.title).includes(text) && !toComparable(task.description).includes(text)) {\n        return false;\n      }\n\n      if (filter.tagId !== undefined && task.tagId !== filter.tagId) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return result;\n}\n\n/** page with the list of tasks, a filter, a \"new task\" button and an edition dialog, if needed. */\nexport function TaskList() {\n  var { boussoleData } = useBoussoleDataState();\n  const [filterVisible, setFilterVisible] = React.useState<boolean>(false);\n  const [filterValue, setFilterValue] = React.useState<TaskFilterValue>({ text: '', tagId: undefined });\n  const [newTaskFormOpen, setNewTaskFormOpen] = React.useState(false);\n\n  /*React.useEffect(() => {\n    (async () => {\n      try {\n        setData(await getData());\n      } catch (error) {\n        setData(error.toString());\n      }\n    })();\n  }, []);*/\n\n  return (\n    <PageLayout\n      headerControls={\n        <Button onClick={() => setFilterVisible(!filterVisible)} isLight={true} title=\"Filtrer\">\n          <FilterImage height={20} width={20} stroke=\"white\" />\n        </Button>\n      }\n    >\n      <div className={styles.taskList}>\n        <TaskFilter visible={filterVisible} value={filterValue} onChange={setFilterValue} />\n        <div className={styles.tasks}>\n          {sortAndFilterTasks(boussoleData, filterVisible ? filterValue : undefined).map((task) => (\n            <TaskComponent key={task.id} task={task} />\n          ))}\n        </div>\n        <div className={styles.tasksButtons}>\n          <Button isWide onClick={() => setNewTaskFormOpen(true)}>\n            +\n          </Button>\n        </div>\n        {newTaskFormOpen && <TaskEditionDialog task={undefined} onClose={() => setNewTaskFormOpen(false)} />}\n      </div>\n    </PageLayout>\n  );\n}\n","import React from 'react';\nimport styles from './IconDesigner.module.scss';\n\nexport interface IIconPreviewProps {\n  svg: string;\n  size: number;\n}\n\nexport const IconPreview: React.FunctionComponent<IIconPreviewProps> = ({ svg, size }) => {\n  return (\n    <div className={styles.iconPreview}>\n      <div\n        dangerouslySetInnerHTML={{ __html: svg }}\n        style={{\n          height: size,\n          width: size,\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './IconDesigner.module.scss';\nimport { IconPreview } from './IconPreview';\n\nexport const IconDesigner: React.FunctionComponent = () => {\n  var [svgValue, setSvgValue] = React.useState('');\n\n  return (\n    <div className={styles.iconDesigner}>\n      <textarea value={svgValue} onChange={(ev) => setSvgValue(ev.target.value)} />\n      <IconPreview svg={svgValue} size={200} />\n      <IconPreview svg={svgValue} size={100} />\n      <IconPreview svg={svgValue} size={50} />\n      <IconPreview svg={svgValue} size={32} />\n      <IconPreview svg={svgValue} size={25} />\n    </div>\n  );\n};\n","export type PhrasingPart = {\r\n  /** text of the part. May be empty. */\r\n  text: string;\r\n  href?: string;\r\n  strong?: boolean;\r\n  em?: boolean;\r\n};\r\n\r\nexport type Block = {\r\n  type: 'ul' | 'ol' | 'p';\r\n  /** parts of the block. There is always at least one part in a block. May be empty only if there is a single part in the block. */\r\n  parts: PhrasingPart[];\r\n};\r\n\r\nexport type Position = {\r\n  blockIndex: number;\r\n  charIndex: number;\r\n};\r\n\r\nexport type TextEditorSelection = {\r\n  // element path to the start of the selection.\r\n  start: Position;\r\n  // element path to the end of the selection. Always equal to or after start. Same object as start (===) if there is a cursor and no selection (=> if the selection is collapsed).\r\n  end: Position;\r\n};\r\n\r\nexport type TextEditorState = {\r\n  blocks: Block[];\r\n  selection: TextEditorSelection | null;\r\n};\r\n\r\nexport const TestTextEditorState: TextEditorState = {\r\n  blocks: [\r\n    {\r\n      type: 'p',\r\n      parts: [\r\n        { text: 'This is a complete test with ' },\r\n        { text: 'a hyperlink', href: 'https://www.google.ch' },\r\n        { text: ', some ' },\r\n        { text: 'strong text', strong: true },\r\n        { text: ' and some ' },\r\n        { text: 'emphasized text', em: true },\r\n        { text: '. Even some text which is ' },\r\n        {\r\n          text: 'a strong and emphasized hyperlink',\r\n          href: 'https://www.google.ch, strong: true ',\r\n          strong: true,\r\n          em: true,\r\n        },\r\n        { text: '.' },\r\n      ],\r\n    },\r\n    {\r\n      type: 'ul',\r\n      parts: [{ text: 'We also have a bullet' }],\r\n    },\r\n    {\r\n      type: 'ul',\r\n      parts: [\r\n        { text: 'And another one with a ' },\r\n        { text: 'link to the ', href: 'https://www.sbb.ch' },\r\n        { text: 'SBB website', href: 'https://www.sbb.ch', strong: true },\r\n        { text: '.' },\r\n      ],\r\n    },\r\n    {\r\n      type: 'p',\r\n      parts: [{ text: 'And finally...' }],\r\n    },\r\n    {\r\n      type: 'ol',\r\n      parts: [{ text: 'An ordered list' }],\r\n    },\r\n    {\r\n      type: 'ol',\r\n      parts: [{ text: 'With two points.' }],\r\n    },\r\n  ],\r\n  selection: null,\r\n};\r\n\r\n/** Update one of the phrasing parts in an array of phrasing parts. Returns a new array. */\r\nconst replacePart = (parts: PhrasingPart[], partIndex: number, newPart: PhrasingPart): PhrasingPart[] => {\r\n  if (partIndex >= parts.length) {\r\n    console.warn(`updating part ${partIndex} but there are only ${parts.length} parts.`);\r\n    return parts;\r\n  }\r\n\r\n  return parts.map((part, index) => (index === partIndex ? newPart : part));\r\n};\r\n\r\nconst countCharacters = (block: Block): number => {\r\n  return block.parts.reduce((total, part) => total + part.text.length, 0);\r\n};\r\n\r\n/** Update the phrasing parts of one of the blocks in an array of blocks. Returns a new array.  */\r\nconst replaceBlock = (blocks: Block[], blockIndex: number, newBlock: Block): Block[] => {\r\n  if (blockIndex >= blocks.length) {\r\n    console.warn(`updating block ${blockIndex} but there are only ${blocks.length} blocks.`);\r\n    return blocks;\r\n  }\r\n\r\n  return blocks.map((block, index) => (index === blockIndex ? newBlock : block));\r\n};\r\n\r\n/** Append a part to an array of phrasing parts and merge the text to the last part if they are compatible (returns a new array). */\r\nexport const appendPart = (parts: PhrasingPart[], part: PhrasingPart): PhrasingPart[] => {\r\n  if (parts.length === 0) {\r\n    parts.push(part);\r\n  } else {\r\n    const previousPart = parts[parts.length - 1];\r\n    if (previousPart.em !== part.em || previousPart.href !== part.href || previousPart.strong !== part.strong) {\r\n      parts.push(part);\r\n    } else {\r\n      parts.splice(parts.length - 1, 1, { ...previousPart, text: previousPart.text + part.text });\r\n    }\r\n  }\r\n  return parts;\r\n};\r\n\r\n/** returns part of a block, from character start (or the start of the block if undefined) until character end (or the end of the block if undefined). */\r\nexport const subBlock = (block: Block, start?: number, end?: number): Block => {\r\n  const result: Block = { type: block.type, parts: [] };\r\n\r\n  let partStart = 0;\r\n  for (let partIndex = 0; partIndex < block.parts.length; partIndex++) {\r\n    const part = block.parts[partIndex];\r\n    const partEnd = partStart + part.text.length;\r\n\r\n    if ((start === undefined || start <= partStart) && (end === undefined || end >= partEnd)) {\r\n      // the block is included entirely\r\n      result.parts.push(part);\r\n    } else if ((start !== undefined && start >= partEnd) || (end !== undefined && end <= partStart)) {\r\n      // the block is excluded entirely\r\n    } else {\r\n      // the block must be kept partly.\r\n\r\n      let text = part.text;\r\n\r\n      if (end !== undefined && end < partEnd) {\r\n        // the text on the right must be removed\r\n        text = part.text.substring(0, end - partStart);\r\n      }\r\n\r\n      if (start !== undefined && start > partStart) {\r\n        // the text on the left must be removed\r\n        text = part.text.substr(start - partStart);\r\n      }\r\n\r\n      result.parts.push({ ...part, text });\r\n    }\r\n\r\n    partStart += part.text.length;\r\n  }\r\n\r\n  if (result.parts.length === 0) {\r\n    result.parts.push({ text: '' });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/** Merge several blocks together, keeping the type of the first block. Merges the last part of a block with the first part of the next block if they are compatible. Returns a new block. */\r\nexport const mergeBlocks = (...blocks: Block[]): Block => {\r\n  if (blocks.length === 0) {\r\n    throw new Error('There must be at least one block to merge.');\r\n  }\r\n\r\n  const result: Block = { ...blocks[0], parts: [...blocks[0].parts] };\r\n\r\n  for (let i = 1; i < blocks.length; i++) {\r\n    var block = blocks[i];\r\n    if (block.parts.length > 0) {\r\n      appendPart(result.parts, block.parts[0]);\r\n      result.parts.push(...blocks[i].parts.slice(1));\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/** clears the selected text. */\r\nexport const clearSelection = (state: TextEditorState): TextEditorState => {\r\n  if (!state.selection || state.selection.start === state.selection.end) {\r\n    return state;\r\n  }\r\n\r\n  const { start, end } = state.selection;\r\n\r\n  const blocks: Block[] = state.blocks.slice(0, start.blockIndex);\r\n\r\n  const partialBlocks: Block[] = [];\r\n\r\n  for (let blockIndex = start.blockIndex; blockIndex <= end.blockIndex; blockIndex++) {\r\n    if (blockIndex > start.blockIndex && blockIndex < end.blockIndex) {\r\n      // The whole block is inside the selection and left out completely\r\n      continue;\r\n    }\r\n\r\n    // The block is on the selection start and/or selection end.\r\n\r\n    const block = state.blocks[blockIndex];\r\n\r\n    if (blockIndex === start.blockIndex) {\r\n      partialBlocks.push(subBlock(block, undefined, start.charIndex));\r\n    }\r\n\r\n    if (blockIndex === end.blockIndex) {\r\n      partialBlocks.push(subBlock(block, end.charIndex, undefined));\r\n    }\r\n  }\r\n\r\n  blocks.push(mergeBlocks(...partialBlocks));\r\n  blocks.push(...state.blocks.slice(end.blockIndex + 1));\r\n\r\n  return {\r\n    blocks,\r\n    selection: { start, end: start },\r\n  };\r\n};\r\n\r\n/** Insert typed text in the state, deleting the selection if there is one. */\r\nexport const textTyped = (state: TextEditorState, text: string): TextEditorState => {\r\n  if (!state.selection) {\r\n    return state;\r\n  }\r\n\r\n  if (state.selection.start !== state.selection.end) {\r\n    state = clearSelection(state);\r\n  }\r\n\r\n  const blockIndex = state.selection!.start.blockIndex;\r\n  const charIndex = state.selection!.start.charIndex;\r\n  const block = state.blocks[blockIndex];\r\n\r\n  let partIndex = 0;\r\n  let partCharIndex = charIndex;\r\n  let part = block.parts[0];\r\n\r\n  // find the part where the text must be added and the position where the text must be added.\r\n  while (true) {\r\n    if (part.text.length >= partCharIndex) break;\r\n    partCharIndex -= part.text.length;\r\n    part = block.parts[++partIndex];\r\n  }\r\n\r\n  const updatedParts = replacePart(block.parts, partIndex, {\r\n    ...part,\r\n    text: part.text.substr(0, partCharIndex) + text + part.text.substr(partCharIndex),\r\n  });\r\n\r\n  const position: Position = {\r\n    blockIndex: blockIndex,\r\n    charIndex: charIndex + text.length,\r\n  };\r\n\r\n  return {\r\n    blocks: replaceBlock(state.blocks, blockIndex, { type: block.type, parts: updatedParts }),\r\n    selection: { start: position, end: position },\r\n  };\r\n};\r\n\r\n/** Effect of the \"backspace\" key. */\r\nexport const deleteContentBackward = (state: TextEditorState): TextEditorState => {\r\n  if (!state.selection) return state;\r\n\r\n  if (state.selection.start !== state.selection.end) {\r\n    // there is a selection; we clear it\r\n    return clearSelection(state);\r\n  }\r\n\r\n  const { blockIndex, charIndex } = state.selection.start;\r\n  const block = state.blocks[blockIndex];\r\n\r\n  if (charIndex > 0) {\r\n    // the cursor is not at the left of the block; we delete the character on its left.\r\n    const updatedBlock = mergeBlocks(subBlock(block, undefined, charIndex - 1), subBlock(block, charIndex));\r\n    const cursorPos = { blockIndex, charIndex: charIndex - 1 };\r\n    return {\r\n      blocks: replaceBlock(state.blocks, blockIndex, updatedBlock),\r\n      selection: { start: cursorPos, end: cursorPos },\r\n    };\r\n  }\r\n\r\n  if (blockIndex === 0) {\r\n    // the cursor is at the start of the text; we don't do anything.\r\n    return state;\r\n  }\r\n\r\n  // the cursor is at the left of the block; we merge the block with the previous one.\r\n  var newBlocks = [...state.blocks];\r\n  var previousBlock = state.blocks[blockIndex - 1];\r\n  const updatedBlock = mergeBlocks(previousBlock, block);\r\n  newBlocks.splice(blockIndex - 1, 2, updatedBlock);\r\n  const cursorPos = {\r\n    blockIndex: blockIndex - 1,\r\n    charIndex: countCharacters(previousBlock),\r\n  };\r\n  return {\r\n    blocks: newBlocks,\r\n    selection: { start: cursorPos, end: cursorPos },\r\n  };\r\n};\r\n\r\n/** Effect of the \"del\" key. */\r\nexport const deleteContentForward = (state: TextEditorState): TextEditorState => {\r\n  if (!state.selection) return state;\r\n\r\n  if (state.selection.start !== state.selection.end) {\r\n    // there is a selection; we clear it\r\n    return clearSelection(state);\r\n  }\r\n\r\n  const { blockIndex, charIndex } = state.selection.start;\r\n  const block = state.blocks[blockIndex];\r\n  const blockLength = countCharacters(block);\r\n\r\n  if (charIndex < blockLength) {\r\n    // the cursor is not at the right of the block; we delete the character on its right.\r\n    const updatedBlock = mergeBlocks(subBlock(block, undefined, charIndex), subBlock(block, charIndex + 1));\r\n    return {\r\n      blocks: replaceBlock(state.blocks, blockIndex, updatedBlock),\r\n      selection: state.selection,\r\n    };\r\n  }\r\n\r\n  if (blockIndex === state.blocks.length - 1) {\r\n    // the cursor is at the end of the text; we don't do anything.\r\n    return state;\r\n  }\r\n\r\n  // the cursor is at the right of the block; we merge the block with the next one.\r\n  var newBlocks = [...state.blocks];\r\n  const updatedBlock = mergeBlocks(state.blocks[blockIndex], state.blocks[blockIndex + 1]);\r\n  newBlocks.splice(blockIndex, 2, updatedBlock);\r\n  return {\r\n    blocks: newBlocks,\r\n    selection: state.selection,\r\n  };\r\n};\r\n\r\nexport const insertParagraph = (state: TextEditorState): TextEditorState => {\r\n  if (!state.selection) return state;\r\n\r\n  if (state.selection.start !== state.selection.end) {\r\n    // there is a selection; we clear it\r\n    state = clearSelection(state);\r\n  }\r\n\r\n  const { blockIndex, charIndex } = state.selection!.start;\r\n  const block = state.blocks[blockIndex];\r\n\r\n  const firstBlock = subBlock(block, undefined, charIndex);\r\n  const secondBlock = subBlock(block, charIndex);\r\n\r\n  var newBlocks = [...state.blocks];\r\n  newBlocks.splice(blockIndex, 1, firstBlock, secondBlock);\r\n\r\n  const newPosition: Position = {\r\n    blockIndex: blockIndex + 1,\r\n    charIndex: 0,\r\n  };\r\n\r\n  return {\r\n    blocks: newBlocks,\r\n    selection: { start: newPosition, end: newPosition },\r\n  };\r\n};\r\n","import React, { ReactElement, Fragment } from 'react';\r\nimport styles from './TextEditor.module.scss';\r\nimport {\r\n  TextEditorState,\r\n  TestTextEditorState,\r\n  TextEditorSelection,\r\n  PhrasingPart,\r\n  Position,\r\n  deleteContentBackward,\r\n  textTyped,\r\n  deleteContentForward,\r\n  insertParagraph,\r\n} from './TextEditorState';\r\n\r\n// implementing undo/redo: https://dev.to/chromiumdev/-native-undo--redo-for-the-web-3fl3\r\n\r\n/** Recursively count characters of a node and its sub-nodes. */\r\nconst countCharacters = (node: Node): number => {\r\n  if (node.nodeType === Node.TEXT_NODE) {\r\n    return node.textContent!.length;\r\n  }\r\n\r\n  var length = 0;\r\n\r\n  if (node.hasChildNodes) {\r\n    var children = node.childNodes;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      length += countCharacters(children[i]);\r\n    }\r\n  }\r\n\r\n  return length;\r\n};\r\n\r\n/** Compute the model position corresponding to a browser selection focus or anchor position */\r\nconst computePosition = (rootElement: HTMLElement, node: Node, offset: number): Position => {\r\n  let charIndex = offset;\r\n\r\n  if (node === rootElement) {\r\n    return { blockIndex: 0, charIndex: 0 };\r\n  }\r\n\r\n  // build a list with all nodes of the hierarchy from node (included) to rootElement (excluded)\r\n\r\n  let nodes: Node[] = [node];\r\n  let parentElement = node.parentElement!;\r\n  while (true) {\r\n    if (parentElement === rootElement) {\r\n      break;\r\n    }\r\n\r\n    nodes.push(parentElement);\r\n    parentElement = parentElement.parentElement!;\r\n  }\r\n\r\n  // find out the block index and remove the element(s) which are part of the block\r\n\r\n  let blockIndex = 0;\r\n  let firstLevelElement: Node | null;\r\n\r\n  if (nodes[nodes.length - 1].nodeName.toLowerCase() === 'p') {\r\n    [firstLevelElement] = nodes.splice(nodes.length - 1);\r\n  } else {\r\n    // ol or ul, blockIndex depends on the li within the list.\r\n\r\n    if (nodes.length === 1) {\r\n      [firstLevelElement] = nodes.splice(nodes.length - 1);\r\n    } else {\r\n      let li: Node | null;\r\n      [li, firstLevelElement] = nodes.splice(nodes.length - 2);\r\n      let sibling = li.previousSibling;\r\n      while (sibling) {\r\n        blockIndex++;\r\n        sibling = sibling.previousSibling;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstLevelElement = firstLevelElement.previousSibling;\r\n  while (firstLevelElement) {\r\n    if (firstLevelElement.nodeName.toLowerCase() === 'p') {\r\n      blockIndex++;\r\n    } else {\r\n      if (firstLevelElement.hasChildNodes) {\r\n        blockIndex += firstLevelElement.childNodes.length;\r\n      }\r\n    }\r\n    firstLevelElement = firstLevelElement.previousSibling;\r\n  }\r\n\r\n  // count the charIndex within the elements which are part of the phrasing.\r\n\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    let sibling = nodes[i].previousSibling;\r\n    while (sibling) {\r\n      if (sibling) {\r\n        charIndex += countCharacters(sibling);\r\n      }\r\n      sibling = sibling.previousSibling;\r\n    }\r\n  }\r\n\r\n  return { blockIndex, charIndex };\r\n};\r\n\r\n/** Compute the model selection corresponding to a browser selection */\r\nconst computeSelection = (rootElement: HTMLElement, selection: Selection | null): TextEditorSelection | null => {\r\n  if (\r\n    selection === null ||\r\n    selection.anchorNode === null ||\r\n    selection.focusNode === null ||\r\n    !rootElement.contains(selection.anchorNode) ||\r\n    !rootElement.contains(selection.focusNode)\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  const focus = computePosition(rootElement, selection.focusNode, selection.focusOffset);\r\n\r\n  if (selection.anchorNode === selection.focusNode && selection.anchorOffset === selection.focusOffset) {\r\n    return { start: focus, end: focus };\r\n  }\r\n\r\n  const anchor = computePosition(rootElement, selection.anchorNode, selection.anchorOffset);\r\n\r\n  if (\r\n    focus.blockIndex < anchor.blockIndex ||\r\n    (focus.blockIndex === anchor.blockIndex && focus.charIndex < anchor.charIndex)\r\n  ) {\r\n    return { start: focus, end: anchor };\r\n  } else {\r\n    return { start: anchor, end: focus };\r\n  }\r\n};\r\n\r\n/** Render document nodes corresponding to a model phrasing part */\r\nconst renderPart = (part: PhrasingPart, key: string | number | undefined): ReactElement => {\r\n  let element = <Fragment key={key}>{part.text}</Fragment>;\r\n  if (part.strong) {\r\n    element = <strong key={key}>{element}</strong>;\r\n  }\r\n  if (part.em) {\r\n    element = <em key={key}>{element}</em>;\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/** Render document nodes corresponding to model phrasing parts */\r\nconst renderParts = (parts: PhrasingPart[]): ReactElement => {\r\n  if (parts.length === 1 && parts[0].text.length === 0) {\r\n    return <br />;\r\n  }\r\n\r\n  const elements: ReactElement[] = [];\r\n\r\n  // group parts with the same href together. Parts with an undefined href are not grouped together.\r\n\r\n  for (let i = 0; i < parts.length; i++) {\r\n    const part = parts[i];\r\n    if (part.href) {\r\n      const subParts: ReactElement[] = [renderPart(part, i)];\r\n      while (i + 1 < parts.length) {\r\n        if (parts[i + 1].href !== part.href) {\r\n          break;\r\n        }\r\n        subParts.push(renderPart(parts[++i], i));\r\n      }\r\n      elements.push(\r\n        <a key={i} href={part.href}>\r\n          {subParts}\r\n        </a>\r\n      );\r\n    } else {\r\n      elements.push(renderPart(part, i));\r\n    }\r\n  }\r\n\r\n  return <>{elements}</>;\r\n};\r\n\r\n/** Render document nodes corresponding to the whole model */\r\nconst render = (state: TextEditorState): ReactElement | null => {\r\n  const elements: ReactElement[] = [];\r\n\r\n  for (let i = 0; i < state.blocks.length; i++) {\r\n    const block = state.blocks[i];\r\n    if (block.type === 'p') {\r\n      elements.push(<p key={i}>{renderParts(block.parts)}</p>);\r\n    } else {\r\n      // ul or ol\r\n      const items: ReactElement[] = [];\r\n\r\n      for (let itemIndex = i; itemIndex < state.blocks.length; itemIndex++) {\r\n        const currentBlock = state.blocks[itemIndex];\r\n        if (currentBlock.type !== block.type) {\r\n          break;\r\n        }\r\n        items.push(<li key={itemIndex}>{renderParts(currentBlock.parts)}</li>);\r\n        i = itemIndex;\r\n      }\r\n      if (block.type === 'ul') {\r\n        elements.push(<ul key={i}>{items}</ul>);\r\n      } else {\r\n        elements.push(<ol key={i}>{items}</ol>);\r\n      }\r\n    }\r\n  }\r\n\r\n  return <>{elements}</>;\r\n};\r\n\r\n/** Find the child node containing the character index. If the appropriate phrasing part is found, an object is returned. Otherwise the remaining index count is returned. */\r\nconst getPhrasingPartAtIndex = (parent: Node, charIndex: number): { node: Node; charIndex: number } | number => {\r\n  var currentIndex = charIndex;\r\n  for (var i = 0; i < parent.childNodes.length; i++) {\r\n    var node = parent.childNodes[i];\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      if (currentIndex <= node.textContent!.length) {\r\n        return {\r\n          node,\r\n          charIndex: currentIndex,\r\n        };\r\n      }\r\n      currentIndex -= node.textContent!.length;\r\n    } else {\r\n      var subPhrasingPart = getPhrasingPartAtIndex(node, currentIndex);\r\n      if (typeof subPhrasingPart === 'object') {\r\n        return subPhrasingPart;\r\n      }\r\n      currentIndex = subPhrasingPart;\r\n    }\r\n  }\r\n  return currentIndex;\r\n};\r\n\r\n/** Find the node and character index corresponding to a model position */\r\nconst getSelectionNodeAndCharIndex = (\r\n  rootElement: HTMLElement,\r\n  pos: Position\r\n): { node: Node; charIndex: number } | undefined => {\r\n  var blockIndex = pos.blockIndex;\r\n  var block: Node | undefined = undefined;\r\n\r\n  // find the block corresponding to pos.blockIndex\r\n\r\n  for (var nodeIndex = 0; nodeIndex < rootElement.childNodes.length; nodeIndex++) {\r\n    var node = rootElement.childNodes[nodeIndex];\r\n    var nodeName = node.nodeName.toLowerCase();\r\n    if (nodeName === 'p') {\r\n      if (blockIndex === 0) {\r\n        block = node;\r\n        break;\r\n      }\r\n      blockIndex--;\r\n    } else if (nodeName === 'ul' || nodeName === 'ol') {\r\n      for (var itemIndex = 0; itemIndex < node.childNodes.length; itemIndex++) {\r\n        var item = node.childNodes[itemIndex];\r\n        if (blockIndex === 0) {\r\n          block = item;\r\n          break;\r\n        }\r\n        blockIndex--;\r\n      }\r\n      if (block) {\r\n        break;\r\n      }\r\n    } else {\r\n      throw new Error('Unexpected block type: ' + node.nodeName);\r\n    }\r\n  }\r\n\r\n  if (!block) {\r\n    return undefined;\r\n  }\r\n\r\n  // find the node and index corresponding to pos.charIndex\r\n\r\n  if (pos.charIndex === 0) {\r\n    return { node: block, charIndex: 0 };\r\n  }\r\n\r\n  var phrasingPart = getPhrasingPartAtIndex(block, pos.charIndex);\r\n  if (typeof phrasingPart === 'object') {\r\n    return phrasingPart;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\n/** Set the document selection so it matches the state selection. */\r\nconst ensureStateSelection = (rootElement: HTMLElement, state: TextEditorState) => {\r\n  let selection = window.getSelection();\r\n\r\n  if (!selection) {\r\n    return;\r\n  }\r\n\r\n  if (state.selection === null) {\r\n    selection.removeAllRanges();\r\n    return;\r\n  }\r\n\r\n  while (selection.rangeCount > 1) {\r\n    selection.removeRange(selection.getRangeAt(1));\r\n  }\r\n\r\n  var editorCompatibleSelection = computeSelection(rootElement, selection);\r\n\r\n  if (\r\n    editorCompatibleSelection == null ||\r\n    editorCompatibleSelection.start.blockIndex !== state.selection.start.blockIndex ||\r\n    editorCompatibleSelection.start.charIndex !== state.selection.start.charIndex ||\r\n    editorCompatibleSelection.end.blockIndex !== state.selection.end.blockIndex ||\r\n    editorCompatibleSelection.end.charIndex !== state.selection.end.charIndex\r\n  ) {\r\n    selection.removeAllRanges();\r\n    var startNodeAndCharIndex = getSelectionNodeAndCharIndex(rootElement, state.selection.start);\r\n    var endNodeAndCharIndex = getSelectionNodeAndCharIndex(rootElement, state.selection.end);\r\n    if (startNodeAndCharIndex && endNodeAndCharIndex) {\r\n      let range = document.createRange();\r\n      range.setStart(startNodeAndCharIndex.node, startNodeAndCharIndex.charIndex);\r\n      range.setEnd(endNodeAndCharIndex.node, endNodeAndCharIndex.charIndex);\r\n      selection.addRange(range);\r\n    }\r\n  }\r\n};\r\n\r\n/** Pure debugging function to show information about the current selection. */\r\nconst getBrowserSelection = (): string => {\r\n  let selection = window.getSelection();\r\n\r\n  if (selection === null) {\r\n    return 'null';\r\n  }\r\n\r\n  if (selection === undefined) {\r\n    return 'undefined';\r\n  }\r\n\r\n  var result = `\\n  rangeCount: ${selection.rangeCount}`;\r\n\r\n  if (selection.anchorNode == null) {\r\n    result += '\\n  anchorNode: null';\r\n  } else {\r\n    result += `\\n  anchorNode: ${selection.anchorNode.nodeName}/${selection.anchorOffset}`;\r\n  }\r\n\r\n  if (selection.focusNode == null) {\r\n    result += '\\n  focusNode: null';\r\n  } else {\r\n    result += `\\n  focusNode: ${selection.focusNode.nodeName}/${selection.focusOffset}`;\r\n  }\r\n\r\n  for (var i = 0; i < selection.rangeCount; i++) {\r\n    var range = selection.getRangeAt(i);\r\n    result += `\\n  range ${i}:\\n    startContainer: ${range.startContainer.nodeName}/${range.startOffset}\\n    endContainer: ${range.endContainer.nodeName}/${range.endOffset}`;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * The text editor has the following components:\r\n * - An editor section (contentEditable) where the user edits the text.\r\n *   Paste operations are intercepted and redirected to the clipboardDiv.\r\n *   All changes are synchronized to a state.\r\n * - A state which contains the structure of the editor as a POJO.\r\n *   That state gets persisted together with the data.\r\n * - A hidden clipboardDiv where the pasted contents are pasted. It is then\r\n *   analyzed and its extracted content goes to the state, then to the text editor.\r\n */\r\nexport const TextEditor: React.FC = () => {\r\n  const [state, setState] = React.useState(() => TestTextEditorState);\r\n\r\n  var sectionRef = React.useRef<HTMLElement>(null);\r\n\r\n  const beforeInputHandler = React.useCallback((event) => {\r\n    const inputEvent = event as InputEvent;\r\n    console.log('event', inputEvent.inputType, inputEvent.data, inputEvent);\r\n    if (inputEvent.inputType === 'insertText') {\r\n      setState((s) => textTyped(s, inputEvent.data || ''));\r\n    }\r\n    if (inputEvent.inputType === 'deleteContentBackward') {\r\n      setState(deleteContentBackward);\r\n    }\r\n    if (inputEvent.inputType === 'deleteContentForward') {\r\n      setState(deleteContentForward);\r\n    }\r\n    if (inputEvent.inputType === 'insertParagraph') {\r\n      setState(insertParagraph);\r\n    }\r\n    event.preventDefault();\r\n  }, []);\r\n\r\n  const selectionChangeEventHandler = React.useCallback(() => {\r\n    const selection = document.getSelection();\r\n    setState((s) => ({ ...s, selection: computeSelection(sectionRef.current!, selection) }));\r\n  }, []);\r\n\r\n  React.useLayoutEffect(() => {\r\n    var div = sectionRef.current!;\r\n    div.addEventListener('beforeinput', beforeInputHandler);\r\n    document.addEventListener('selectionchange', selectionChangeEventHandler);\r\n\r\n    return () => {\r\n      div.removeEventListener('beforeinput', beforeInputHandler);\r\n      document.removeEventListener('selectionchange', selectionChangeEventHandler);\r\n    };\r\n  }, [beforeInputHandler, selectionChangeEventHandler]);\r\n\r\n  React.useLayoutEffect(() => {\r\n    // set the selection defined in the state.\r\n    ensureStateSelection(sectionRef.current!, state);\r\n  }, [state]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <section ref={sectionRef} contentEditable className={styles.textEditor} suppressContentEditableWarning={true}>\r\n          {render(state)}\r\n        </section>\r\n        <pre>State selection: {state.selection === null ? '-' : `${JSON.stringify(state.selection, null, '  ')}`}</pre>\r\n        <pre>Browser selection: {getBrowserSelection()}</pre>\r\n      </div>\r\n      <div>\r\n        <pre>Blocks: {state.blocks === null ? '-' : `${JSON.stringify(state.blocks, null, '  ')}`}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './TextEditor.module.scss';\r\n\r\ntype Event = {\r\n  type: string;\r\n  inputType: string;\r\n  data: string | null;\r\n  cancelable: boolean;\r\n  isComposing: boolean;\r\n};\r\n\r\nexport const AnalysisEditor: React.FC = () => {\r\n  const [events, setEvent] = React.useState<Event[]>([]);\r\n\r\n  const addEvent = React.useCallback(\r\n    (type: string, inputType: string, data: string | null, cancelable: boolean, isComposing: boolean) =>\r\n      setEvent((ev) => [{ type, inputType, data, cancelable, isComposing }, ...ev]),\r\n    []\r\n  );\r\n\r\n  var sectionRef = React.useRef<HTMLElement>(null);\r\n\r\n  const beforeInputHandler = React.useCallback(\r\n    (ev) => {\r\n      const event = ev as InputEvent;\r\n\r\n      if (event.inputType === 'insertFromPaste') {\r\n        const dataTransfer = (event as any).dataTransfer as DataTransfer;\r\n        if (dataTransfer.types.includes('text/html')) {\r\n          var template = document.createElement('template');\r\n          template.innerHTML = dataTransfer.getData('text/html');\r\n          var ranges = (event as any).getTargetRanges();\r\n          console.log('parsed', template.content, ranges);\r\n          if (event.cancelable) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      }\r\n\r\n      addEvent(event.type, event.inputType, event.data, event.cancelable, event.isComposing);\r\n      // if (inputEvent.inputType === 'insertText') {\r\n      //   setState((s) => textTyped(s, inputEvent.data || ''));\r\n      // }\r\n      // if (inputEvent.inputType === 'deleteContentBackward') {\r\n      //   setState(deleteContentBackward);\r\n      // }\r\n      // if (inputEvent.inputType === 'deleteContentForward') {\r\n      //   setState(deleteContentForward);\r\n      // }\r\n      // if (inputEvent.inputType === 'insertParagraph') {\r\n      //   setState(insertParagraph);\r\n      // }\r\n      // event.preventDefault();\r\n    },\r\n    [addEvent]\r\n  );\r\n\r\n  const selectionChangeEventHandler = React.useCallback(() => {\r\n    const selection = document.getSelection();\r\n    let desc: string;\r\n    if (!selection) {\r\n      desc = 'no selection';\r\n    } else {\r\n      if (!selection.focusNode) {\r\n        desc = 'no focus node';\r\n      } else {\r\n        desc = `focus ${selection.focusNode.nodeType}:${selection.focusOffset}`;\r\n      }\r\n\r\n      if (selection.anchorNode) {\r\n        desc += `, anchor ${selection.anchorNode.nodeType}:${selection.anchorOffset}`;\r\n      }\r\n    }\r\n    addEvent('selectionchange', '', desc, false, false);\r\n    console.log(`selectionchange ${desc}\\n`, selection);\r\n  }, [addEvent]);\r\n\r\n  const inputLogger = React.useCallback(\r\n    (ev) => {\r\n      const event = ev as InputEvent;\r\n      addEvent(event.type, event.inputType, event.data, event.cancelable, event.isComposing);\r\n    },\r\n    [addEvent]\r\n  );\r\n\r\n  const compositionEventLogger = React.useCallback(\r\n    (ev) => {\r\n      const event = ev as CompositionEvent;\r\n      if (event.type === 'compositionend' && event.cancelable) {\r\n        event.preventDefault();\r\n      }\r\n      addEvent(event.type, '', event.data, event.cancelable, true);\r\n    },\r\n    [addEvent]\r\n  );\r\n\r\n  React.useLayoutEffect(() => {\r\n    var div = sectionRef.current!;\r\n    div.addEventListener('beforeinput', beforeInputHandler);\r\n    //document.addEventListener('selectionchange', selectionChangeEventHandler);\r\n    div.addEventListener('input', inputLogger);\r\n    div.addEventListener('compositionstart', compositionEventLogger);\r\n    div.addEventListener('compositionupdate', compositionEventLogger);\r\n    div.addEventListener('compositionend', compositionEventLogger);\r\n\r\n    const callback: MutationCallback = (mutationsList) => {\r\n      for (const mutation of mutationsList) {\r\n        if (mutation.type === 'attributes') {\r\n          console.log('mutationObserver-attributes: the ' + mutation.attributeName + ' attribute was modified.');\r\n        } else {\r\n          console.log(`mutationObserver-${mutation.type}`);\r\n        }\r\n      }\r\n    };\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(div, { attributes: true, childList: true, subtree: true });\r\n\r\n    return () => {\r\n      div.removeEventListener('beforeinput', beforeInputHandler);\r\n      //document.removeEventListener('selectionchange', selectionChangeEventHandler);\r\n      div.removeEventListener('input', inputLogger);\r\n      div.removeEventListener('compositionstart', compositionEventLogger);\r\n      div.removeEventListener('compositionupdate', compositionEventLogger);\r\n      div.removeEventListener('compositionend', compositionEventLogger);\r\n      observer.disconnect();\r\n    };\r\n  }, [beforeInputHandler, selectionChangeEventHandler, inputLogger, compositionEventLogger]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <section ref={sectionRef} contentEditable className={styles.textEditor} suppressContentEditableWarning={true}>\r\n          <p id=\"a\" data-montruc={{ ciao: 'monpote' }}>\r\n            Voici une{' '}\r\n            <span id=\"b\" contentEditable={false} style={{ backgroundColor: 'yellow' }}>\r\n              référence\r\n            </span>{' '}\r\n            et un <span id=\"c\">texte</span> vraiment par<span id=\"d\">ti</span>culier.\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <div>\r\n        <pre style={{ textAlign: 'left' }}>{sectionRef.current ? sectionRef.current.outerHTML : ''}</pre>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          <th>type</th>\r\n          <th>inputType</th>\r\n          <th>data</th>\r\n          <th>cancelable</th>\r\n          <th>isComposing</th>\r\n        </tr>\r\n        {events.map((event, index) => (\r\n          <tr key={events.length - index}>\r\n            <td>{event.type}</td>\r\n            <td>{event.inputType}</td>\r\n            <td>{event.data}</td>\r\n            <td>{event.cancelable.toString()}</td>\r\n            <td>{event.isComposing.toString()}</td>\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TextEditor2Model } from './TextEditor2Model';\r\n\r\nexport type TextEditor2Props = {\r\n  model: TextEditor2Model;\r\n  setModel: (model: TextEditor2Model) => void;\r\n};\r\n\r\nexport const TextEditor2: React.FC<TextEditor2Props> = ({ model, setModel }) => {\r\n  const rootDivRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  React.useLayoutEffect(() => {\r\n    const engine = new TextEditor2Engine(rootDivRef.current!, model, setModel);\r\n    return engine.unmount;\r\n  }, [model, setModel]);\r\n\r\n  return (\r\n    <div ref={rootDivRef} contentEditable suppressContentEditableWarning={true}>\r\n      <p style={{ background: 'blue' }} data-key=\"2\" className=\"a b c\">\r\n        toto\r\n      </p>\r\n      <p style={{ background: 'lime' }} data-key=\"4\">\r\n        asdf\r\n      </p>\r\n      <p style={{ background: 'magenta' }}>to delete</p>\r\n      blah blah\r\n      <p style={{ background: 'yellow' }} data-key=\"1\">\r\n        tutu\r\n      </p>\r\n      hi guy\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TextEditor2Engine {\r\n  private rootElement: HTMLDivElement;\r\n  private model: InnerModel;\r\n  private setModel: (model: TextEditor2Model) => void;\r\n  private nextKey: number = 1;\r\n\r\n  public constructor(\r\n    rootElement: HTMLDivElement,\r\n    model: TextEditor2Model,\r\n    setModel: (model: TextEditor2Model) => void\r\n  ) {\r\n    this.rootElement = rootElement;\r\n    this.model = this.getInnerModel(model);\r\n    this.setModel = setModel;\r\n    this.render();\r\n  }\r\n\r\n  private getInnerModel(model: TextEditor2Model): InnerModel {\r\n    const result: InnerModel = { paragraphs: [] };\r\n    for (let p of model) {\r\n      result.paragraphs.push({\r\n        key: this.nextKey++,\r\n        text: p,\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private render() {\r\n    var virtualDom = getVirtualDom(this.model);\r\n    this.rootElement.normalize();\r\n    this.renderNodes(this.rootElement, virtualDom);\r\n  }\r\n\r\n  private renderNodes(parent: HTMLElement, vNodes: VirtualDomNode[]) {\r\n    const childNodesWithoutKey: ChildNode[] = [];\r\n    const childNodesWithKey: { [key: number]: ChildNode } = {};\r\n\r\n    // retrieve all child nodes of type TEXT_NODE or ELEMENT_NODE and store them in childNodesWithoutKey or childNodesWithKey.\r\n    // other nodes are deleted.\r\n    if (parent.hasChildNodes()) {\r\n      const children = parent.childNodes;\r\n      for (let i = 0; i < children.length; i++) {\r\n        let childNode = parent.childNodes[i];\r\n\r\n        if (childNode.nodeType !== Node.TEXT_NODE && childNode.nodeType !== Node.ELEMENT_NODE) {\r\n          childNode.remove();\r\n          i--;\r\n          continue;\r\n        }\r\n\r\n        if (childNode.nodeType === Node.ELEMENT_NODE) {\r\n          const el = childNode as HTMLElement;\r\n          var keyStr = el.dataset.key;\r\n          if (keyStr) {\r\n            var key = parseInt(keyStr);\r\n            if (!isNaN(key)) {\r\n              if (childNodesWithKey[key] !== undefined) {\r\n                // remove duplicate node with key\r\n                childNode.remove();\r\n                i -= 1;\r\n              } else {\r\n                childNodesWithKey[key] = childNode;\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        childNodesWithoutKey.push(childNode);\r\n      }\r\n    }\r\n\r\n    let nextChildIndex = 0;\r\n\r\n    let previousNode: ChildNode | null = null;\r\n    for (const vNode of vNodes) {\r\n      var nodeToAppend: ChildNode | undefined;\r\n      if (vNode.type === 'text') {\r\n        // try to find a text node with the correct text, removing any other text node\r\n        while (nextChildIndex < childNodesWithoutKey.length) {\r\n          const childNode = childNodesWithoutKey[nextChildIndex];\r\n          if (childNode.nodeType !== Node.TEXT_NODE) {\r\n            break;\r\n          }\r\n          const el = childNodesWithoutKey[nextChildIndex++] as Text;\r\n          if (el.data === vNode.text) {\r\n            nodeToAppend = el;\r\n            break;\r\n          }\r\n          childNode.remove();\r\n        }\r\n\r\n        // no appropriate node was found, create a new one.\r\n        if (!nodeToAppend) {\r\n          nodeToAppend = document.createTextNode(vNode.text);\r\n        }\r\n      } else {\r\n        // element\r\n\r\n        // try to find get the existing node by key and make sure it has the correct tag name.\r\n        nodeToAppend = childNodesWithKey[vNode.key];\r\n        if (nodeToAppend) {\r\n          delete childNodesWithKey[vNode.key];\r\n          const el = nodeToAppend as HTMLElement;\r\n          if (el.tagName !== 'P') {\r\n            nodeToAppend.remove();\r\n            nodeToAppend = undefined;\r\n          }\r\n        }\r\n\r\n        // if not found, try to pick the next node without a key.\r\n        if (!nodeToAppend)\r\n          while (nextChildIndex < childNodesWithoutKey.length) {\r\n            const childNode = childNodesWithoutKey[nextChildIndex];\r\n            if (childNode.nodeType === Node.TEXT_NODE) {\r\n              childNode.remove();\r\n              continue;\r\n            }\r\n            nodeToAppend = childNodesWithoutKey[nextChildIndex++] as HTMLElement;\r\n          }\r\n\r\n        // no appropriate node was found, create a new one.\r\n        if (!nodeToAppend) {\r\n          nodeToAppend = document.createElement('P');\r\n        }\r\n\r\n        const el = nodeToAppend as HTMLElement;\r\n        while (el.attributes.length > 0) {\r\n          el.removeAttribute(el.attributes[0].name);\r\n        }\r\n\r\n        el.dataset.key = vNode.key.toString();\r\n\r\n        this.renderNodes(el, vNode.children);\r\n      }\r\n\r\n      if (previousNode) {\r\n        previousNode.after(nodeToAppend);\r\n      } else {\r\n        parent.prepend(nodeToAppend);\r\n      }\r\n\r\n      previousNode = nodeToAppend;\r\n    }\r\n\r\n    for (let node of childNodesWithoutKey) {\r\n      node.remove();\r\n    }\r\n\r\n    for (var k in childNodesWithKey) {\r\n      childNodesWithKey[k].remove();\r\n    }\r\n  }\r\n\r\n  public unmount() {}\r\n}\r\n\r\nconst getVirtualDom = (model: InnerModel): VirtualDomNode[] => {\r\n  const result: VirtualDomNode[] = [];\r\n\r\n  for (const p of model.paragraphs) {\r\n    result.push({\r\n      type: 'element',\r\n      key: p.key,\r\n      children: [\r\n        {\r\n          type: 'text',\r\n          text: p.text,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\ntype Paragraph = {\r\n  key: number;\r\n  text: string;\r\n};\r\n\r\ntype InnerModel = {\r\n  paragraphs: Paragraph[];\r\n};\r\n\r\ntype VirtualDomNode = VirtualDomElement | VirtualDomTextNode;\r\n\r\ntype VirtualDomElement = {\r\n  type: 'element';\r\n  key: number;\r\n  children: VirtualDomNode[];\r\n};\r\n\r\ntype VirtualDomTextNode = {\r\n  type: 'text';\r\n  text: string;\r\n};\r\n\r\n// ev.getTargetRanges() to know what is being updated\r\n// ev.dataTransfer.types\r\n// ev.dataTransfer.getData('text/html')\r\n","import React from 'react';\r\nimport { TextEditor2 } from './TextEditor2';\r\nimport { TextEditor2Model } from './TextEditor2Model';\r\n\r\nexport const TextEditor2Playground: React.FC = () => {\r\n  const [model, setModel] = React.useState<TextEditor2Model>(['First', 'Second']);\r\n\r\n  return (\r\n    <div>\r\n      <TextEditor2 model={model} setModel={setModel} />\r\n      <div>asdf</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport styles from './App.module.scss';\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { TaskList } from '../Tasks/TaskList';\nimport { PageLayout } from './PageLayout';\nimport { IconDesigner } from '../IconDesigner/IconDesigner';\nimport { TextEditor } from '../TextEditor/TextEditor';\nimport { AnalysisEditor } from '../TextEditor/AnalysisEditor';\nimport { TextEditor2Playground } from '../TextEditor2/TextEditor2Playground';\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return <>Invalid path: « {location.pathname} »</>;\n}\n\nexport const AppComponent = () => {\n  return (\n    <div className={styles.app}>\n      <ErrorBoundary>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/tasks\" />\n          </Route>\n          <Route path=\"/editor2\" exact>\n            <PageLayout>\n              <TextEditor2Playground />\n            </PageLayout>\n          </Route>\n          <Route path=\"/editor-analysis\" exact>\n            <PageLayout>\n              <AnalysisEditor />\n            </PageLayout>\n          </Route>\n          <Route path=\"/editor-test\" exact>\n            <PageLayout>\n              <TextEditor />\n            </PageLayout>\n          </Route>\n          <Route path=\"/icon-designer\" exact>\n            <PageLayout>\n              <IconDesigner />\n            </PageLayout>\n          </Route>\n          <Route path=\"/home\" exact>\n            <PageLayout>Home page</PageLayout>\n          </Route>\n          <Route path=\"/tasks\" exact>\n            <TaskList />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </ErrorBoundary>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './LoadStatus.module.scss';\nimport logo from '../../Assets/boussole.svg';\n\nexport type LoadStatusProps = {\n  done: number;\n  total: number;\n  message: string;\n};\n\nexport const LoadStatus: React.FC<LoadStatusProps> = ({ done, total, message }) => {\n  const rects: JSX.Element[] = [];\n\n  for (var i = 0; i < total; i++) {\n    rects.push(\n      <rect\n        key={i}\n        x={i * 120}\n        y=\"2.5\"\n        width=\"95\"\n        height=\"95\"\n        rx=\"25\"\n        ry=\"25\"\n        style={{\n          fill: i < done ? 'rgb(125, 160, 191)' : 'rgb(255, 255, 255)',\n          strokeWidth: 5,\n          stroke: 'rgb(67, 106, 140)',\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.loadStatus}>\n      <img src={logo} alt=\"logo\" />\n      <svg className={styles.loadBar} viewBox={`0 0 ${total * 120 - 20} 100`}>\n        {rects}\n      </svg>\n      {message}\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// window.addEventListener('beforeunload', (event) => {\n//   // Cancel the event as stated by the standard.\n//   event.preventDefault();\n//   // Chrome requires returnValue to be set.\n//   event.returnValue = '';\n// });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { AppComponent } from './AppComponent';\nimport { AuthManagerProvider } from '../../Services/Auth/AuthManagerProvider';\nimport { BoussoleDataStoreProvider } from '../../Services/BoussoleDataStore/BoussoleDataStoreProvider';\nimport { BoussoleDataStateProvider } from '../../Services/BoussoleDataState/BoussoleDataState';\nimport { BoussoleDataServiceProvider } from '../../Services/BoussoleDataService/BoussoleDataServiceProvider';\nimport { LoadStatus } from '../LoadStatus/LoadStatus';\nimport { DevModeProvider } from '../../Services/DevMode/DevMode';\n\nexport const App: React.FC = () => {\n  return (\n    <AuthManagerProvider\n      getNotAuthenticatedComponents={() => <LoadStatus done={0} total={2} message=\"Authentification en cours...\" />}\n      getAuthenticatedComponents={() => (\n        <DevModeProvider>\n          <BoussoleDataStoreProvider>\n            <BoussoleDataStateProvider\n              getNotReadyComponents={() => <LoadStatus done={1} total={2} message=\"Chargement des données...\" />}\n              getReadyComponents={() => (\n                <BoussoleDataServiceProvider>\n                  <Router>\n                    <AppComponent />\n                  </Router>\n                </BoussoleDataServiceProvider>\n              )}\n            />\n          </BoussoleDataStoreProvider>\n        </DevModeProvider>\n      )}\n    />\n  );\n};\n"],"sourceRoot":""}
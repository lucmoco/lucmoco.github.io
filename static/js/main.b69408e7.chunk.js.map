{"version":3,"sources":["Auth/Auth.ts","Auth/UseAuthHook.ts","Components/ErrorBoundary/ErrorBoundary.tsx","Components/AuthStatus/AuthStatus.tsx","Services/DataStore.ts","Components/Tasks/TaskComponent.tsx","Components/Tasks/TaskForm.tsx","Components/Tasks/Tasks.tsx","Components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["scope","window","boussoleAuthManager","oAuth2Client","OAuth2Client","clientId","redirectUri","location","origin","state","listeners","setState","forEach","listener","subscribe","push","unsubscribe","index","indexOf","splice","getState","getOAuth2Client","authenticate","console","debug","status","a","authorizeUrl","generateAuthUrl","login_hint","pathname","search","hash","response_type","href","this","transporter","configure","urlSearchParams","URLSearchParams","substr","accessToken","get","originalPage","Error","expiresIn","expiration","Date","setSeconds","getSeconds","parseInt","setCredentials","access_token","localStorage","setItem","toISOString","history","replaceState","accessTokenInfo","getItem","accessTokenInfoParts","split","getTime","authManager","useAuth","useState","React","useEffect","ErrorBoundary","props","isError","error","errorInfo","componentStack","children","getExpirationString","secondsToExpiration","Math","round","AuthStatus","authState","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","className","onClick","getData","fileId","parentFolderQuery","q","fields","request","url","parentFolderResponse","parentFolderId","data","files","id","fileQuery","fileResponse","fileContent","TaskComponent","task","title","TaskForm","onClose","Tasks","tasks","setData","isOpen","taskForm","setTaskForm","toString","map","key","taskId","find","undefined","NoMatch","useLocation","Boolean","hostname","match","ReactDOM","render","errorMessage","to","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b69408e7.chunk.js","sourcesContent":["import { AuthState } from './AuthState';\r\nimport { OAuth2Client } from 'google-auth-library';\r\n\r\nconst scope = [\r\n  'https://www.googleapis.com/auth/userinfo.profile',\r\n  'https://www.googleapis.com/auth/drive'\r\n];\r\n\r\nexport type AuthStateListener = (state: AuthState) => void;\r\n\r\nclass AuthManager {\r\n  private readonly oAuth2Client = new OAuth2Client({\r\n    clientId: \"186913784324-548k2j5jsqlht13qhu2miegr42fu0v56.apps.googleusercontent.com\",\r\n    redirectUri: `${window.location.origin}`,\r\n  });\r\n\r\n  private state: AuthState;\r\n  private listeners: AuthStateListener[] = [];\r\n\r\n  public constructor() {\r\n    this.oAuth2Client.transporter.configure()\r\n\r\n    const urlSearchParams = new URLSearchParams(window.location.hash.substr(1));\r\n    var accessToken = urlSearchParams.get(\"access_token\");\r\n\r\n    if (accessToken != null) {\r\n      /* We got an access token back from Google */\r\n\r\n      const originalPage = urlSearchParams.get(\"state\");\r\n      if (!originalPage) {\r\n        throw new Error(\"missing originalPage field.\");\r\n      }\r\n\r\n      const expiresIn = urlSearchParams.get(\"expires_in\");\r\n      if (!expiresIn) {\r\n        throw new Error(\"missing expires_in field.\");\r\n      }\r\n\r\n      const expiration = new Date();\r\n      expiration.setSeconds(expiration.getSeconds() + parseInt(expiresIn));\r\n\r\n      console.debug(\"Auth: TokenReceived\");\r\n      this.state = { status: 'TokenReceived' };\r\n\r\n      this.oAuth2Client.setCredentials({ access_token: accessToken });\r\n      localStorage.setItem(\"access_token\", `${accessToken}|${expiration.toISOString()}`);\r\n\r\n      window.history.replaceState(null, \"\", originalPage);\r\n      this.setState({ status: 'Authenticated', expiration });\r\n    } else {\r\n      const accessTokenInfo = localStorage.getItem(\"access_token\");\r\n      var expiration: Date | null = null;\r\n      if (accessTokenInfo) {\r\n        /* The user is already authenticated. */\r\n\r\n        const accessTokenInfoParts = accessTokenInfo.split(\"|\");\r\n        accessToken = accessTokenInfoParts[0];\r\n        expiration = new Date(accessTokenInfoParts[1]);\r\n\r\n        if (expiration.getTime() < new Date().getTime() + 10 * 60 * 1000) {\r\n          expiration = null;\r\n        }\r\n      }\r\n\r\n      if (expiration != null) {\r\n        this.oAuth2Client.setCredentials({ access_token: accessToken });\r\n        this.state = { status: 'Authenticated', expiration };\r\n      } else {\r\n        /* The user is not yet authenticated or its authentication will expire in less than 10 minutes. Redirect the user to Google authentication. */\r\n\r\n        this.state = { status: 'AuthenticationNeeded' };\r\n        this.authenticate();\r\n      }\r\n    }\r\n  }\r\n\r\n  private setState = (state: AuthState) => {\r\n    this.state = state;\r\n    this.listeners.forEach(listener => listener(state));\r\n  }\r\n\r\n  public subscribe = (listener: AuthStateListener) => {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  public unsubscribe = (listener: AuthStateListener) => {\r\n    const index = this.listeners.indexOf(listener);\r\n    if (index > -1) {\r\n      this.listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public getState = (): AuthState => this.state;\r\n\r\n  public getOAuth2Client = (): OAuth2Client => {\r\n    return this.oAuth2Client;\r\n  }\r\n\r\n  public authenticate = () => {\r\n    console.debug(\"Auth: RedirectingToGoogle\");\r\n    this.state = { status: 'AuthenticationNeeded' };\r\n\r\n    (async () => {\r\n      // redirect the user to Google authentication\r\n\r\n      const authorizeUrl = this.oAuth2Client.generateAuthUrl({\r\n        scope,\r\n        login_hint: \"lucmoco@gmail.com\",\r\n        state: window.location.pathname + window.location.search + window.location.hash,\r\n        response_type: \"token\",\r\n      });\r\n\r\n      window.location.href = authorizeUrl;\r\n    })();\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface Window { boussoleAuthManager?: AuthManager; }\r\n}\r\n\r\nif (!window.boussoleAuthManager) {\r\n  window.boussoleAuthManager = new AuthManager();\r\n};\r\n\r\nconst authManager = window.boussoleAuthManager;\r\n\r\nexport function getAuthState() {\r\n  return authManager.getState();\r\n}\r\n\r\nexport function subscribe(listener: AuthStateListener): () => void {\r\n  authManager.subscribe(listener);\r\n  return () => {\r\n    authManager.unsubscribe(listener);\r\n  };\r\n}\r\n\r\nexport function getOAuth2Client(): OAuth2Client {\r\n  return authManager.getOAuth2Client();\r\n}\r\n\r\nexport function authenticate() {\r\n  authManager.authenticate();\r\n}","import React from \"react\";\r\nimport { AuthState } from \"./AuthState\";\r\nimport { useState } from \"react\";\r\nimport { getAuthState, subscribe } from \"./Auth\";\r\n\r\nexport function useAuth(): AuthState {\r\n  const [state, setState] = useState(getAuthState());\r\n\r\n  React.useEffect(() => {\r\n    subscribe(setState);\r\n  }, []);\r\n\r\n  return state;\r\n}\r\n","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  isError: boolean;\r\n  error: React.ErrorInfo | null;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, IErrorBoundaryState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { isError: false, error: null };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n    this.setState({ isError: true, error: errorInfo });\r\n  }\r\n\r\n  render(): any {\r\n    if (this.state.isError) {\r\n      return <div>{this.state.error!.componentStack}</div>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","import React from \"react\";\r\nimport './AuthStatus.css';\r\nimport { AuthState } from \"../../Auth/AuthState\";\r\nimport { authenticate } from \"../../Auth/Auth\";\r\n\r\nfunction getExpirationString(expiration: Date): string {\r\n  var secondsToExpiration = Math.round((expiration.getTime() - new Date().getTime()) / 1000);\r\n  if (secondsToExpiration > 100) {\r\n    return `${Math.round(secondsToExpiration / 60)} minutes`;\r\n  } else {\r\n    return `${Math.round(secondsToExpiration)} seconds`;\r\n  }\r\n}\r\n\r\nexport function AuthStatus(props: { authState: AuthState }) {\r\n  const { authState } = props;\r\n  const expiration = authState.status == 'Authenticated' ? authState.expiration : null;\r\n\r\n  const [timeLeft, setTimeLeft] = React.useState(expiration === null ? null : getExpirationString(expiration));\r\n\r\n  React.useEffect(() => {\r\n    if (expiration === null) {\r\n      return;\r\n    }\r\n\r\n    const intervalId = setInterval(() => {\r\n      setTimeLeft(getExpirationString(expiration));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [expiration]);\r\n\r\n  if (expiration === null) {\r\n    return <div>Not authenticated.</div>\r\n  }\r\n\r\n  return <div className=\"authStatus\">\r\n    {authState.status}, expiration: {timeLeft}\r\n    <span className=\"authRenewButton\" onClick={authenticate}>Renew</span>\r\n  </div>;\r\n}\r\n","import { getOAuth2Client } from \"../Auth/Auth\";\r\n\r\nexport type Task = {\r\n  id: string;\r\n  title: string;\r\n};\r\n\r\nexport type Model = {\r\n  tasks: Task[]\r\n};\r\n\r\nexport async function getData() {\r\n  var oAuth2Client = getOAuth2Client();\r\n\r\n  var fileId = window.localStorage[\"NotesFileId\"];\r\n\r\n  if (fileId == null) {\r\n    /* get parent folder */\r\n\r\n    const parentFolderQuery = new URLSearchParams({\r\n      q: \"'root' in parents and mimeType = 'application/vnd.google-apps.folder' and name = 'notes-perso-boussole'\",\r\n      fields: \"files/id\",\r\n    });\r\n\r\n    const parentFolderResponse = await oAuth2Client.request({ url: `https://www.googleapis.com/drive/v3/files?${parentFolderQuery}` });\r\n    var parentFolderId = (parentFolderResponse.data as any).files[0].id;\r\n\r\n    /* get file id */\r\n\r\n    const fileQuery = new URLSearchParams({\r\n      q: `'${parentFolderId}' in parents and name = 'notes.json'`,\r\n      fields: \"files/id\",\r\n    });\r\n\r\n    const fileResponse = await oAuth2Client.request({ url: `https://www.googleapis.com/drive/v3/files?${fileQuery}` });\r\n    window.localStorage[\"NotesFileId\"] = fileId = (fileResponse.data as any).files[0].id;\r\n  }\r\n\r\n  /* get file content */\r\n\r\n  var fileContent = await oAuth2Client.request({ url: `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media` });\r\n  return fileContent.data as Model;\r\n}","import React from \"react\";\r\nimport { Task } from \"../../Services/DataStore\";\r\n\r\nexport type TaskComponent = {\r\n  task: Task;\r\n  onClick: () => void;\r\n};\r\n\r\nexport function TaskComponent(props: TaskComponent) {\r\n  return <div onClick={props.onClick} className=\"task\">{props.task.title}</div>;\r\n}","import React from \"react\";\r\nimport \"./Tasks.css\";\r\nimport { Task } from \"../../Services/DataStore\";\r\n\r\nexport type TaskFormProps = {\r\n  task: Task | undefined;\r\n  onClose: () => void;\r\n};\r\n\r\nexport function TaskForm(props: TaskFormProps) {\r\n  return <div className=\"taskForm\">\r\n    <div>{props.task!.title}</div>\r\n    <div>\r\n      <div onClick={() => props.onClose()} className=\"closeButton\">close</div>\r\n    </div>\r\n  </div>;\r\n}","import React from \"react\";\r\nimport \"./Tasks.css\";\r\nimport { getData, Model } from \"../../Services/DataStore\";\r\nimport { TaskComponent } from \"../Tasks/TaskComponent\";\r\nimport { TaskForm } from \"./TaskForm\";\r\n\r\ntype TaskFormState = {\r\n  isOpen: boolean;\r\n  taskId?: string;\r\n};\r\n\r\nexport function Tasks() {\r\n  const [data, setData] = React.useState<Model>({ tasks: [] });\r\n  const [taskForm, setTaskForm] = React.useState<TaskFormState>({ isOpen: false });\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setData(await getData());\r\n      } catch (error) {\r\n        setData(error.toString());\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return <div className=\"tasks\">\r\n    {data.tasks.map(task => <TaskComponent key={task.id} task={task} onClick={() => setTaskForm({ isOpen: true, taskId: task.id })} />)}\r\n    {\r\n      taskForm.isOpen &&\r\n      <TaskForm\r\n        task={taskForm.taskId ? data.tasks.find(task => task.id === taskForm.taskId) : undefined}\r\n        onClose={() => setTaskForm({ isOpen: false })}\r\n      />}\r\n  </div>;\r\n}","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Link\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../Auth/UseAuthHook';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { AuthStatus } from '../AuthStatus/AuthStatus';\nimport { Tasks } from '../Tasks/Tasks';\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <>\n      Invalid path: « {location.pathname} »\n    </>\n  );\n}\n\nexport const App: React.FC = () => {\n  var authState = useAuth();\n\n  if (authState.status === 'Error') {\n    return <div>Authentication failed: \"{authState.errorMessage}\"</div>\n  }\n\n  if (authState.status === 'AuthenticationNeeded') {\n    return <div>Auth required. AuthenticationNeeded...</div>\n  }\n\n  if (authState.status === 'TokenReceived') {\n    return <div>TokenReceived...</div>\n  }\n\n  // authInfo.status == 'Authenticated'\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/tasks\">Tasks</Link>\n          <AuthStatus authState={authState} />\n        </header>\n        <section>\n          <ErrorBoundary>\n            <Switch>\n              <Route path=\"/\" exact>\n                Home page\n              </Route>\n              <Route path=\"/tasks\" exact>\n                <Tasks />\n              </Route>\n              <Route path=\"*\">\n                <NoMatch />\n              </Route>\n            </Switch>\n          </ErrorBoundary>\n        </section>\n      </div>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
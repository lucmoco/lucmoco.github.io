{"version":3,"sources":["Components/Tasks/Tasks.module.scss","Components/Tags/TagComponent.module.scss","Components/App/App.module.scss","Components/Utility/Dialog/Dialog.module.scss","Components/IconDesigner/IconDesigner.module.scss","Components/Utility/Button/Button.module.scss","Components/Utility/Field/Field.module.scss","Components/LoadStatus/LoadStatus.module.scss","Components/Utility/Overlay/Overlay.module.scss","Components/Utility/Spacing.module.scss","Assets/boussole.svg","Components/ErrorBoundary/ErrorBoundary.tsx","Helpers/guidHelper.ts","Services/BoussoleDataService/BoussoleDataService.ts","Services/BoussoleDataStore/BoussoleDataStore.ts","Services/Auth/AuthManager.ts","Services/Auth/AuthManagerProvider.tsx","Services/BoussoleDataStore/BoussoleDataStoreProvider.tsx","Helpers/ParticleState/ParticleState.ts","Services/BoussoleDataState/BoussoleDataStateProvider.tsx","Services/BoussoleDataService/BoussoleDataServiceProvider.tsx","Helpers/tasksHelper.ts","Helpers/cssHelper.ts","Helpers/textHerlper.ts","Components/Tasks/TaskState/TaskStateIndicator.tsx","Components/Utility/Overlay/Overlay.tsx","Components/Utility/Button/Button.tsx","Components/Utility/Dialog/Dialog.tsx","Components/Tasks/TaskState/TaskStateChoice.tsx","Components/Tasks/TaskState/TaskStateEditionDialog.tsx","Components/Utility/Field/Field.tsx","DataModel/Tags.ts","Components/Tags/TagControl.tsx","Components/Tags/TagComponent.tsx","Components/Tags/TagEditionDialog.tsx","Components/Tasks/TaskForm.tsx","Components/Tasks/TaskEditionDialog.tsx","Components/Tasks/TaskComponent.tsx","Services/BoussoleData/BoussoleDataProvider.tsx","Assets/SaveImage.tsx","Components/App/PageLayout.tsx","Services/AutoSaver/AutoSaver.ts","Assets/FilterImage.tsx","Components/Tasks/TaskFilter.tsx","Components/Tasks/TaskList.tsx","Components/IconDesigner/IconPreview.tsx","Components/IconDesigner/IconDesigner.tsx","Components/App/AppComponent.tsx","Components/LoadStatus/LoadStatus.tsx","serviceWorker.ts","index.tsx","Components/App/App.tsx"],"names":["module","exports","ErrorBoundary","props","state","isError","error","errorInfo","this","setState","componentStack","children","React","getUniqueDigits","length","result","i","charAt","Math","floor","random","BoussoleDataService","store","createTask","task","updateState","tasks","id","now","Date","created","modified","updateTask","updates","Error","BoussoleDataStore","authManager","acquireToken","accessToken","fetch","headers","Authorization","response","json","storeModel","getAppState","data","getStoreModel","method","body","JSON","stringify","appState","taskId","push","undefined","tagId","title","description","dateClosed","forEach","storeTask","getTask","scopes","AuthManager","account","application","PublicClientApplication","auth","clientId","authority","handleRedirectPromise","accounts","getAllAccounts","loginRedirect","authenticate","acquireTokenSilent","authResult","AuthManagerContext","createContext","AuthManagerProvider","getNotAuthenticatedComponents","getAuthenticatedComponents","useMemo","useState","authenticated","setAuthenticated","useEffect","a","Provider","value","BoussoleDataStoreContext","BoussoleDataStoreProvider","useContext","useAuthManager","boussoleDataStore","useBoussoleDataStore","ParticleState","callbacks","getState","notify","updateFunc","newState","subscribe","callback","indexOf","filter","c","BoussoleDataStateContext","BoussoleDataStateProvider","getNotReadyComponents","getReadyComponents","boussoleDataState","setBoussoleDataState","loadData","useBoussoleDataState","BoussoleDataServiceContext","BoussoleDataServiceProvider","boussoleDataService","useBoussoleDataService","getClasses","args","name","join","getStateLabel","TaskStateIndicator","showText","showCurrentBorder","showNotCurrent","onClick","className","styles","taskStateIndicator","small","thickBorder","notCurrent","clickable","event","stopPropagation","Overlay","overlay","Button","isLight","isWide","button","light","wide","Dialog","buttons","dialog","content","map","onclick","text","TaskStateChoice","onChange","renderState","useCallback","buttonState","spacingStyles","spaceOutVerticalComponents","taskStateClosed","TaskStateEditionDialog","onClose","Field","label","field","AllTags","TagControl","active","noTag","onRemove","tag","ev","remove","TagComponent","find","t","TagEditionDialog","allTagIdsWithNull","allTagIds","TaskForm","tagEditFormOpen","setTagEditFormOpen","type","target","TaskEditionDialog","editedTask","setEditedTask","TaskComponent","taskEditDialogOpen","setTaskEditDialogOpen","stateEditDialogOpen","setStateEditDialogOpen","BoussoleDataContext","BoussoleDataProvider","boussoleData","setBoussoleData","SaveImage","xmlns","shapeRendering","textRendering","imageRendering","fillRule","clipRule","viewBox","d","PageLayout","headerControls","saveStatus","useRef","setSaveStatus","onModelChange","model","current","modelBeingSaved","modelToSave","saveData","useAutoSaver","to","saveButton","saving","height","width","FilterImage","fill","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","TaskFilter","visible","textRef","focus","tasksFilter","tasksFilterInner","ref","taskFilterText","getStateOrder","compare","task1","task2","localeCompare","toComparable","toLowerCase","normalize","replace","TaskList","useBoussoleData","filterVisible","setFilterVisible","filterValue","setFilterValue","newTaskFormOpen","setNewTaskFormOpen","stroke","taskList","Object","keys","sort","includes","sortAndFilterTasks","key","tasksButtons","IconPreview","svg","size","iconPreview","dangerouslySetInnerHTML","__html","style","IconDesigner","svgValue","setSvgValue","iconDesigner","NoMatch","location","useLocation","pathname","AppComponent","app","path","exact","LoadStatus","done","total","message","rects","x","y","rx","ry","loadStatus","src","logo","alt","loadBar","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1435619b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"Tasks_taskList__1j01R\",\"tasksFilter\":\"Tasks_tasksFilter__SByHK\",\"visible\":\"Tasks_visible__2gUcH\",\"tasksFilterInner\":\"Tasks_tasksFilterInner__37v1d\",\"taskFilterText\":\"Tasks_taskFilterText__1lomt\",\"tasks\":\"Tasks_tasks__4y0vu\",\"tasksButtons\":\"Tasks_tasksButtons__XJ-pN\",\"task\":\"Tasks_task__3bw5D\",\"title\":\"Tasks_title__1CtZZ\",\"taskForm\":\"Tasks_taskForm__oi8da\",\"button\":\"Tasks_button__25aul\",\"taskStateIndicator\":\"Tasks_taskStateIndicator__3zudG\",\"notCurrent\":\"Tasks_notCurrent__21dv8\",\"clickable\":\"Tasks_clickable__fAQfc\",\"thickBorder\":\"Tasks_thickBorder__3vSP1\",\"small\":\"Tasks_small__eHZhy\",\"created\":\"Tasks_created__3OKBO\",\"in-backlog\":\"Tasks_in-backlog__1cBRA\",\"active\":\"Tasks_active__c-6hh\",\"finished\":\"Tasks_finished__dGaVL\",\"abandoned\":\"Tasks_abandoned__-2J94\",\"taskStateClosed\":\"Tasks_taskStateClosed__2ySBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"TagComponent_tag__O9Do5\",\"noTag\":\"TagComponent_noTag__2j8yO\",\"clickable\":\"TagComponent_clickable__lE7XX\",\"active\":\"TagComponent_active__2nCyq\",\"remove\":\"TagComponent_remove__2SJVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__32N6G\",\"saveButton\":\"App_saveButton__1Y4GW\",\"saving\":\"App_saving__19u3L\",\"blinker\":\"App_blinker__3O4-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2jZTN\",\"title\":\"Dialog_title__1r951\",\"content\":\"Dialog_content__3EOpS\",\"buttons\":\"Dialog_buttons__1OnQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconDesigner\":\"IconDesigner_iconDesigner__FdLiT\",\"iconPreview\":\"IconDesigner_iconPreview__2680x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button___qM3V\",\"wide\":\"Button_wide__3ejWw\",\"light\":\"Button_light__2KPpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__1UM57\",\"label\":\"Field_label__2F_cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadStatus\":\"LoadStatus_loadStatus__2d1fD\",\"loadBar\":\"LoadStatus_loadBar__eTTVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3WkJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spaceOutVerticalComponents\":\"Spacing_spaceOutVerticalComponents__x2Ed8\"};","module.exports = __webpack_public_path__ + \"static/media/boussole.b5a6f5f8.svg\";","import * as React from 'react';\n\ninterface IErrorBoundaryState {\n  isError: boolean;\n  error: React.ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends React.Component<{}, IErrorBoundaryState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = { isError: false, error: null };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({ isError: true, error: errorInfo });\n  }\n\n  render(): any {\n    if (this.state.isError) {\n      return <div>{this.state.error!.componentStack}</div>;\n    }\n\n    return this.props.children;\n  }\n}\n","const Digits = '0123456789abcdef';\n\nfunction getUniqueDigits(length: number) {\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += Digits.charAt(Math.floor(Math.random() * Digits.length));\n  }\n  return result;\n}\n\nexport function newGuid() {\n  return `${getUniqueDigits(8)}-${getUniqueDigits(4)}-${getUniqueDigits(4)}-${getUniqueDigits(4)}-${getUniqueDigits(\n    12\n  )}`;\n}\n","import { IBoussoleDataService } from './IBoussoleDataService';\r\nimport { IBoussoleDataState } from '../BoussoleDataState/IBoussoleDataState';\r\nimport { Task } from '../../DataModel/Task';\r\nimport { newGuid } from '../../Helpers/guidHelper';\r\n\r\nexport class BoussoleDataService implements IBoussoleDataService {\r\n  private store: IBoussoleDataState;\r\n\r\n  constructor(store: IBoussoleDataState) {\r\n    this.store = store;\r\n  }\r\n\r\n  public createTask = (task: Task) => {\r\n    this.store.updateState((tasks) => {\r\n      const id = newGuid();\r\n      const now = new Date();\r\n      tasks[id] = {\r\n        ...task,\r\n        id,\r\n        created: now,\r\n        modified: now,\r\n      };\r\n      return { ...tasks };\r\n    });\r\n  };\r\n\r\n  public updateTask = (id: string, updates: Partial<Task>) => {\r\n    this.store.updateState((tasks) => {\r\n      var task = tasks[id];\r\n      if (!task) throw new Error(`No task found with id {id}`);\r\n      tasks[id] = {\r\n        ...task,\r\n        ...updates,\r\n      };\r\n      return { ...tasks };\r\n    });\r\n  };\r\n}\r\n","import { IBoussoleDataStore } from './IBoussoleDataStore';\nimport { IAuthManager } from '../Auth/IAuthManager';\nimport { BoussoleData } from '../../DataModel/BoussoleData';\nimport { Task } from '../../DataModel/Task';\nimport { StoreTask, BoussoleDataStoreModel } from './BoussoleDataStoreModel';\n\nexport class BoussoleDataStore implements IBoussoleDataStore {\n  readonly authManager: IAuthManager;\n\n  public constructor(authManager: IAuthManager) {\n    this.authManager = authManager;\n  }\n\n  async loadData() {\n    var accessToken = await this.authManager.acquireToken();\n\n    var response = await fetch(\n      'https://graph.microsoft.com/v1.0/me/drive/root:/boussole-data-files/notes.json:/content',\n      { headers: { Authorization: 'Bearer ' + accessToken } }\n    );\n\n    var storeModel = await response.json();\n    return getAppState(storeModel);\n  }\n\n  async saveData(data: BoussoleData) {\n    var storeModel = getStoreModel(data);\n    var accessToken = await this.authManager.acquireToken();\n\n    await fetch('https://graph.microsoft.com/v1.0/me/drive/root:/boussole-data-files/notes.json:/content', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'text/plain',\n        Authorization: 'Bearer ' + accessToken,\n      },\n      body: JSON.stringify(storeModel, null, '  '),\n    });\n  }\n}\n\n// *** Conversion from Application Model to Data Store Model and vice versa ***\n\nfunction getStoreTask(task: Task): StoreTask {\n  return {\n    state: task.state === 'created' ? undefined : task.state,\n    tagId: task.tagId || undefined,\n    id: task.id,\n    title: task.title,\n    description: task.description || undefined,\n    created: task.created,\n    modified: task.modified,\n    dateClosed: task.dateClosed,\n  };\n}\n\nfunction getStoreModel(appState: BoussoleData): BoussoleDataStoreModel {\n  const tasks: StoreTask[] = [];\n  for (const taskId in appState) {\n    tasks.push(getStoreTask(appState[taskId]));\n  }\n\n  return { tasks };\n}\n\nfunction getTask(storeTask: StoreTask): Task {\n  return {\n    state: storeTask.state || 'created',\n    tagId: storeTask.tagId || null,\n    id: storeTask.id,\n    title: storeTask.title,\n    description: storeTask.description || '',\n    created: storeTask.created,\n    modified: storeTask.modified,\n    dateClosed: storeTask.dateClosed,\n  };\n}\n\nfunction getAppState(storeModel: BoussoleDataStoreModel): BoussoleData {\n  const tasks: BoussoleData = {};\n\n  storeModel.tasks.forEach((storeTask) => (tasks[storeTask.id] = getTask(storeTask)));\n\n  return tasks;\n}\n","import { IAuthManager } from './IAuthManager';\r\nimport { PublicClientApplication, AccountInfo } from '@azure/msal-browser';\r\n\r\nconst scopes = ['https://graph.microsoft.com/Files.ReadWrite'];\r\n\r\nexport class AuthManager implements IAuthManager {\r\n  account: AccountInfo | undefined;\r\n\r\n  readonly application = new PublicClientApplication({\r\n    auth: {\r\n      clientId: 'c1fef6c7-2dd3-425b-aa1e-e9c94ca00c63',\r\n      authority: 'https://login.microsoftonline.com/consumers/',\r\n    },\r\n  });\r\n\r\n  async authenticate() {\r\n    await this.application.handleRedirectPromise();\r\n    var accounts = this.application.getAllAccounts();\r\n\r\n    if (accounts.length === 0) {\r\n      // a login is needed. The page execution will stop here.\r\n      await this.application.loginRedirect();\r\n    }\r\n\r\n    this.account = accounts[0];\r\n  }\r\n\r\n  async acquireToken() {\r\n    await this.authenticate();\r\n\r\n    var authResult = await this.application.acquireTokenSilent({\r\n      scopes,\r\n      account: this.account!,\r\n    });\r\n    return authResult.accessToken;\r\n  }\r\n}\r\n\r\nexport const getAuthManager = (): IAuthManager => {\r\n  return new AuthManager();\r\n};\r\n","import React from 'react';\r\nimport { IAuthManager } from './IAuthManager';\r\nimport { AuthManager } from './AuthManager';\r\n\r\nconst AuthManagerContext = React.createContext<IAuthManager>(undefined as any);\r\n\r\nexport interface IAuthManagerProviderProps {\r\n  getNotAuthenticatedComponents: () => React.ReactElement | null;\r\n  getAuthenticatedComponents: () => React.ReactElement | null;\r\n}\r\n\r\nexport const AuthManagerProvider: React.FC<IAuthManagerProviderProps> = ({\r\n  getNotAuthenticatedComponents,\r\n  getAuthenticatedComponents,\r\n}) => {\r\n  const authManager = React.useMemo(() => new AuthManager(), []);\r\n  const [authenticated, setAuthenticated] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      await authManager.authenticate();\r\n      setAuthenticated(true);\r\n    })();\r\n  }, [authManager]);\r\n\r\n  return (\r\n    <AuthManagerContext.Provider value={authManager}>\r\n      {authenticated ? getAuthenticatedComponents() : getNotAuthenticatedComponents()}\r\n    </AuthManagerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuthManager = () => {\r\n  const authManager = React.useContext(AuthManagerContext);\r\n  if (!authManager) {\r\n    throw new Error('Please define an AuthManagerProvider upper in the component tree.');\r\n  }\r\n  return authManager;\r\n};\r\n","import React from 'react';\r\nimport { IBoussoleDataStore } from './IBoussoleDataStore';\r\nimport { BoussoleDataStore } from './BoussoleDataStore';\r\nimport { useAuthManager } from '../Auth/AuthManagerProvider';\r\n\r\nconst BoussoleDataStoreContext = React.createContext<IBoussoleDataStore>(undefined as any);\r\n\r\nexport const BoussoleDataStoreProvider: React.FC = ({ children }) => {\r\n  const authManager = useAuthManager();\r\n  const boussoleDataStore = React.useMemo(() => new BoussoleDataStore(authManager), [authManager]);\r\n  return <BoussoleDataStoreContext.Provider value={boussoleDataStore}>{children}</BoussoleDataStoreContext.Provider>;\r\n};\r\n\r\nexport const useBoussoleDataStore = () => {\r\n  const boussoleDataStore = React.useContext(BoussoleDataStoreContext);\r\n  if (!boussoleDataStore) {\r\n    throw new Error('Please define a BoussoleDataStoreProvider upper in the component tree.');\r\n  }\r\n  return boussoleDataStore;\r\n};\r\n","import { IParticleState, ParticleStateListener } from './IParticleState';\n\nexport const toto = 'tutu';\n\nexport class ParticleState<TState> implements IParticleState<TState> {\n  private state: TState;\n  private callbacks: ParticleStateListener<TState>[];\n\n  constructor(state: TState) {\n    this.state = state;\n    this.callbacks = [];\n  }\n\n  public getState = () => this.state;\n\n  public setState = (state: TState) => {\n    this.state = state;\n    this.notify();\n  };\n\n  public updateState = (updateFunc: (state: TState) => TState) => {\n    var newState = updateFunc(this.state);\n    if (newState !== this.state) {\n      this.state = newState;\n      this.notify();\n    }\n  };\n\n  public subscribe = (callback: ParticleStateListener<TState>) => {\n    if (this.callbacks.indexOf(callback) >= 0) {\n      throw new Error('The callback is already registered.');\n    }\n\n    this.callbacks.push(callback);\n\n    return () => {\n      this.callbacks = this.callbacks.filter((c) => c !== callback);\n    };\n  };\n\n  private notify = () => {\n    var state = this.state;\n    for (var callback of this.callbacks) {\n      if (this.state !== state) {\n        // a callback has updated the state again. The next callbacks are not called, all callbacks will be called with the new value.\n        return;\n      }\n\n      if (this.callbacks.indexOf(callback) < 0) {\n        // the callback has been removed in a callback.\n        continue;\n      }\n\n      callback(state);\n    }\n  };\n}\n","import React from 'react';\r\nimport { useBoussoleDataStore } from '../BoussoleDataStore/BoussoleDataStoreProvider';\r\nimport { ParticleState } from '../../Helpers/ParticleState/ParticleState';\r\nimport { BoussoleData } from '../../DataModel/BoussoleData';\r\nimport { IBoussoleDataState } from './IBoussoleDataState';\r\n\r\nconst BoussoleDataStateContext = React.createContext<IBoussoleDataState>(undefined as any);\r\n\r\nexport interface IBoussoleDataStateProviderProps {\r\n  getNotReadyComponents: () => React.ReactElement | null;\r\n  getReadyComponents: () => React.ReactElement | null;\r\n}\r\n\r\n/** Loads and manages the boussole data. Children are rendered if data is available, otherwise a \"wait\" message is being displayed. */\r\nexport const BoussoleDataStateProvider: React.FC<IBoussoleDataStateProviderProps> = ({\r\n  getNotReadyComponents,\r\n  getReadyComponents,\r\n}) => {\r\n  const boussoleDataStore = useBoussoleDataStore();\r\n  const [boussoleDataState, setBoussoleDataState] = React.useState<IBoussoleDataState | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const data = await boussoleDataStore.loadData();\r\n      setBoussoleDataState(new ParticleState<BoussoleData>(data));\r\n    })();\r\n  }, [boussoleDataStore]);\r\n\r\n  if (boussoleDataState === undefined) {\r\n    return <>{getNotReadyComponents()}</>;\r\n  }\r\n\r\n  return (\r\n    <BoussoleDataStateContext.Provider value={boussoleDataState!}>\r\n      {getReadyComponents()}\r\n    </BoussoleDataStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBoussoleDataState = () => {\r\n  const boussoleDataState = React.useContext(BoussoleDataStateContext);\r\n  if (!boussoleDataState) {\r\n    throw new Error('Please define a BoussoleDataStateProvider upper in the component tree.');\r\n  }\r\n  return boussoleDataState;\r\n};\r\n","import React from 'react';\r\nimport { IBoussoleDataService } from './IBoussoleDataService';\r\nimport { BoussoleDataService } from './BoussoleDataService';\r\nimport { useBoussoleDataState } from '../BoussoleDataState/BoussoleDataStateProvider';\r\n\r\nconst BoussoleDataServiceContext = React.createContext<IBoussoleDataService>(undefined as any);\r\n\r\nexport const BoussoleDataServiceProvider: React.FC = ({ children }) => {\r\n  const boussoleDataState = useBoussoleDataState();\r\n  const boussoleDataService = React.useMemo(() => new BoussoleDataService(boussoleDataState), [boussoleDataState]);\r\n\r\n  return (\r\n    <BoussoleDataServiceContext.Provider value={boussoleDataService!}>{children}</BoussoleDataServiceContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBoussoleDataService = () => {\r\n  const boussoleDataService = React.useContext(BoussoleDataServiceContext);\r\n  if (!boussoleDataService) {\r\n    throw new Error('Please define a BoussoleDataServiceProvider upper in the component tree.');\r\n  }\r\n  return boussoleDataService;\r\n};\r\n","import { Task, TaskState } from '../DataModel/Task';\n\nexport const getNewTask = (): Task => ({\n  id: '',\n  tagId: null,\n  state: 'created',\n  title: '',\n  description: '',\n  created: new Date(),\n  modified: new Date(),\n});\n\nexport const newState = (state: TaskState): Partial<Task> => {\n  return {\n    state,\n    dateClosed: state === 'finished' || state === 'abandoned' ? new Date() : undefined,\n  };\n};\n","export const getClasses = (...args: (string | null | undefined | false)[]): string => {\n  return args.filter((name) => !!name).join(' ');\n};\n","import { TaskState } from '../DataModel/Task';\n\nexport const getStateLabel = (state: TaskState): string => {\n  switch (state) {\n    case 'created':\n      return 'En attente';\n    case 'in-backlog':\n      return 'Dans le radar';\n    case 'active':\n      return 'En cours';\n    case 'finished':\n      return 'Terminée';\n    case 'abandoned':\n      return 'Abandonnée';\n  }\n};\n","import React from 'react';\nimport styles from '../Tasks.module.scss';\nimport { getClasses } from '../../../Helpers/cssHelper';\nimport { TaskState } from '../../../DataModel/Task';\nimport { getStateLabel } from '../../../Helpers/textHerlper';\n\nexport type TaskStateDisplayProps = {\n  /** State to be rendered. */\n  state: TaskState;\n  /** Show the text. */\n  showText?: boolean;\n  /** Display a thick border. */\n  showCurrentBorder?: boolean;\n  /** Display an attenuated color. */\n  showNotCurrent?: boolean;\n  /** Display as a button and call onClick when clicked. If undefined, the control is not clickable. */\n  onClick?: () => void;\n};\n\n/** Shows a task state as a rounded rectangle, with a background color corresponding to the state, and optionally the state's text label. */\nexport const TaskStateIndicator: React.FC<TaskStateDisplayProps> = ({\n  state,\n  showText,\n  showCurrentBorder,\n  showNotCurrent,\n  onClick,\n}) => {\n  return (\n    <div\n      title={showText ? undefined : getStateLabel(state)}\n      className={getClasses(\n        styles.taskStateIndicator,\n        styles[state],\n        !showText && styles.small,\n        showCurrentBorder && styles.thickBorder,\n        showNotCurrent && styles.notCurrent,\n        onClick && styles.clickable\n      )}\n      onClick={\n        onClick\n          ? (event) => {\n              event.stopPropagation();\n              onClick();\n            }\n          : undefined\n      }\n    >\n      {showText && getStateLabel(state)}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Overlay.module.scss';\n\nexport const Overlay: FunctionComponent<{}> = ({ children }) => {\n  return <div className={styles.overlay}>{children}</div>;\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Button.module.scss';\nimport { getClasses } from '../../../Helpers/cssHelper';\n\nexport interface ButtonProps {\n  isLight?: boolean;\n  isWide?: boolean;\n  title?: string;\n  onClick?: () => void;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = ({ isLight, isWide, title, onClick, children }) => {\n  return (\n    <div\n      className={getClasses(styles.button, isLight && styles.light, isWide && styles.wide)}\n      title={title}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Dialog.module.scss';\nimport { Overlay } from '../Overlay/Overlay';\nimport { Button } from '../Button/Button';\n\nexport interface ButtonProps {\n  text: string;\n  onclick: () => void;\n}\n\nexport interface DialogProps {\n  title?: string;\n  buttons?: ButtonProps[];\n}\n\nexport const Dialog: FunctionComponent<DialogProps> = ({ title, buttons, children }) => {\n  return (\n    <Overlay>\n      <div className={styles.dialog}>\n        {title && <div className={styles.title}>{title}</div>}\n        <div className={styles.content}>{children}</div>\n        {buttons && (\n          <div className={styles.buttons}>\n            {buttons.map((button) => (\n              <Button isWide onClick={button.onclick}>\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        )}\n      </div>\n    </Overlay>\n  );\n};\n","import React from 'react';\nimport styles from '../Tasks.module.scss';\nimport spacingStyles from '../../Utility/Spacing.module.scss';\nimport { TaskState } from '../../../DataModel/Task';\nimport { TaskStateIndicator } from './TaskStateIndicator';\n\nexport type TaskStateChoiceProps = {\n  state: TaskState;\n  onChange: (state: TaskState) => void;\n};\n\n/** Shows all possible task states and enables selecting a state.\n *  Does not commit any action, but calls onChange whenever a new state is selected. */\nexport const TaskStateChoice: React.FC<TaskStateChoiceProps> = ({ state, onChange }) => {\n  const renderState = React.useCallback(\n    (buttonState: TaskState) => {\n      return (\n        <TaskStateIndicator\n          state={buttonState}\n          showText\n          showCurrentBorder={buttonState === state}\n          showNotCurrent={buttonState !== state}\n          onClick={\n            buttonState === state\n              ? undefined\n              : () => {\n                  onChange(buttonState);\n                }\n          }\n        />\n      );\n    },\n    [state, onChange]\n  );\n\n  return (\n    <div className={spacingStyles.spaceOutVerticalComponents}>\n      {renderState('created')}\n      {renderState('in-backlog')}\n      {renderState('active')}\n      <div className={styles.taskStateClosed}>\n        {renderState('finished')}\n        {renderState('abandoned')}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TaskState } from '../../../DataModel/Task';\nimport { Dialog } from '../../Utility/Dialog/Dialog';\nimport { TaskStateChoice } from './TaskStateChoice';\n\nexport type TaskStateEditionDialogProps = {\n  /** The task to be rendered. */\n  state: TaskState;\n  /** Triggered when the task is being clicked. */\n  onClose: (state?: TaskState) => void;\n};\n\n/** Edition of a task's state, displays all possible states. Calls onClose when a state is selected, or when \"Cancel\" is clicked. */\nexport const TaskStateEditionDialog: React.FunctionComponent<TaskStateEditionDialogProps> = ({ state, onClose }) => {\n  return (\n    <Dialog\n      buttons={[\n        {\n          text: 'Annuler',\n          onclick: () => {\n            onClose();\n          },\n        },\n      ]}\n    >\n      <TaskStateChoice state={state} onChange={onClose} />\n    </Dialog>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport styles from './Field.module.scss';\n\nexport interface FieldProps {\n  label: string;\n}\n\nexport const Field: FunctionComponent<FieldProps> = ({ label, children }) => {\n  return (\n    <div className={styles.field}>\n      <div className={styles.label}>{label}</div>\n      <div>{children}</div>\n    </div>\n  );\n};\n","export type Tag = {\r\n  id: string;\r\n  name: string;\r\n};\r\n\r\nexport const AllTags: Tag[] = [\r\n  {\r\n    id: 'cp',\r\n    name: 'Conseil de paroisse',\r\n  },\r\n  {\r\n    id: 'scouts',\r\n    name: 'Scouts',\r\n  },\r\n  {\r\n    id: 'travaux',\r\n    name: 'Travaux maison',\r\n  },\r\n  {\r\n    id: 'achats',\r\n    name: 'Achats',\r\n  },\r\n  {\r\n    id: 'jardin',\r\n    name: 'Jardin',\r\n  },\r\n  {\r\n    id: 'loisirs',\r\n    name: 'Loisirs',\r\n  },\r\n  {\r\n    id: 'maison',\r\n    name: 'Entretien, rangement maison',\r\n  },\r\n  {\r\n    id: 'administration',\r\n    name: 'Administration',\r\n  },\r\n  {\r\n    id: 'vie-famille',\r\n    name: 'Vie de famille, spiritualité',\r\n  },\r\n];\r\n\r\nexport const getTag = (tagId: string | undefined): Tag | undefined => {\r\n  return AllTags.find((tag) => tag.id === tagId);\r\n};\r\n","import React from 'react';\r\nimport styles from './TagComponent.module.scss';\r\nimport { getClasses } from '../../Helpers/cssHelper';\r\n\r\nexport type TagControlProps = {\r\n  /** Text to be rendered in the tag. */\r\n  text: string;\r\n\r\n  /** If true, the tag is rendered with a more prominent color. */\r\n  active?: boolean;\r\n\r\n  /** If true, the tag is rendered gray instead of colored. */\r\n  noTag?: boolean;\r\n\r\n  /** If not undefined, the tag is clickable and onClick() is called when the tag is clicked. */\r\n  onClick?: () => void;\r\n\r\n  /** If not undefined, a cross is rendered, and \"onRemove\" is called when the cross is clicked. */\r\n  onRemove?: () => void;\r\n};\r\n\r\n/** Raw rendering of a tag. */\r\nexport const TagControl: React.FunctionComponent<TagControlProps> = ({ text, active, noTag, onClick, onRemove }) => {\r\n  return (\r\n    <div\r\n      className={getClasses(styles.tag, onClick && styles.clickable, active && styles.active, noTag && styles.noTag)}\r\n      onClick={\r\n        onClick\r\n          ? (ev) => {\r\n              ev.stopPropagation();\r\n              onClick!();\r\n            }\r\n          : undefined\r\n      }\r\n    >\r\n      {text}\r\n      {onRemove && (\r\n        <span\r\n          className={styles.remove}\r\n          onClick={(ev) => {\r\n            ev.stopPropagation();\r\n            onRemove!();\r\n          }}\r\n        >\r\n          X\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AllTags } from '../../DataModel/Tags';\r\nimport { TagControl } from './TagControl';\r\n\r\nexport type TagComponentProps = {\r\n  /** ID of the tag to be rendered. null means \"no tag\".*/\r\n  tagId: string | null;\r\n\r\n  /** If true, the tag is rendered with a more prominent color. */\r\n  active?: boolean;\r\n\r\n  /** If defined, the tag is clickable, and onClick is called when the tag is clicked. */\r\n  onClick?: (tagId: string | null) => void;\r\n\r\n  /** If not undefined, a cross is rendered, and \"onRemove\" is called when the cross is clicked. */\r\n  onRemove?: () => void;\r\n};\r\n\r\n/** displays a tag, calls onClick when the tag is clicked (if onClick is not undefined). */\r\nexport const TagComponent: React.FunctionComponent<TagComponentProps> = ({ tagId, active, onClick, onRemove }) => {\r\n  const tag = AllTags.find((t) => t.id === tagId);\r\n  return (\r\n    <TagControl\r\n      text={tag ? tag.name : 'Pas de catégorie'}\r\n      active={active}\r\n      noTag={tagId === null}\r\n      onClick={onClick ? () => onClick(tagId) : undefined}\r\n      onRemove={onRemove}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Dialog } from '../Utility/Dialog/Dialog';\r\nimport { TagComponent } from './TagComponent';\r\nimport { AllTags } from '../../DataModel/Tags';\r\n\r\nexport type TagEditionDialogProps = {\r\n  tagId: string | null | undefined;\r\n  onChange: (tagId: string | null) => void;\r\n  onClose: () => void;\r\n};\r\n\r\n/** Edition of a task's state, displays all possible states. Calls onClose when a state is selected, or when \"Cancel\" is clicked. */\r\nexport const TagEditionDialog: React.FunctionComponent<TagEditionDialogProps> = ({ tagId, onChange, onClose }) => {\r\n  var allTagIdsWithNull = React.useMemo<(string | null)[]>(() => {\r\n    const allTagIds = AllTags.map((tag) => tag.id);\r\n    if (tagId === null || tagId === undefined) {\r\n      return [null, ...allTagIds];\r\n    }\r\n    return [tagId, null, ...allTagIds.filter((id) => id !== tagId)];\r\n  }, [tagId]);\r\n\r\n  return (\r\n    <Dialog\r\n      buttons={[\r\n        {\r\n          text: 'Annuler',\r\n          onclick: () => {\r\n            onClose();\r\n          },\r\n        },\r\n      ]}\r\n    >\r\n      {allTagIdsWithNull.map((id) => (\r\n        <TagComponent tagId={id} active={id === tagId} onClick={id === tagId ? undefined : onChange} />\r\n      ))}\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from 'react';\nimport { TaskStateChoice } from './TaskState/TaskStateChoice';\nimport { Field } from '../Utility/Field/Field';\nimport { newState } from '../../Helpers/tasksHelper';\nimport { Task } from '../../DataModel/Task';\nimport { TagComponent } from '../Tags/TagComponent';\nimport { TagEditionDialog } from '../Tags/TagEditionDialog';\n\nexport type TaskFormProps = {\n  task: Task;\n  onChange: (task: Task) => void;\n};\n\n/** Enables editing a task's data. Calls onChange when any change occurs. Does not have buttons. */\nexport const TaskForm: React.FC<TaskFormProps> = ({ task, onChange }) => {\n  const [tagEditFormOpen, setTagEditFormOpen] = React.useState(false);\n  return (\n    <>\n      <TaskStateChoice state={task.state} onChange={(state) => onChange({ ...task, ...newState(state) })} />\n      <Field label=\"titre\">\n        <input type=\"text\" value={task.title} onChange={(event) => onChange({ ...task, title: event.target.value })} />\n      </Field>\n      <Field label=\"catégorie\">\n        <TagComponent\n          tagId={task.tagId}\n          active\n          onClick={() => {\n            setTagEditFormOpen(true);\n          }}\n        />\n      </Field>\n      <Field label=\"description\">\n        <textarea\n          value={task.description}\n          onChange={(event) => onChange({ ...task, description: event.target.value })}\n        />\n      </Field>\n      {tagEditFormOpen && (\n        <TagEditionDialog\n          tagId={task.tagId}\n          onChange={(tagId) => {\n            onChange({ ...task, tagId });\n            setTagEditFormOpen(false);\n          }}\n          onClose={() => setTagEditFormOpen(false)}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { useBoussoleDataService } from '../../Services/BoussoleDataService/BoussoleDataServiceProvider';\nimport { getNewTask } from '../../Helpers/tasksHelper';\nimport { Task } from '../../DataModel/Task';\nimport { Dialog } from '../Utility/Dialog/Dialog';\nimport { TaskForm } from './TaskForm';\n\nexport type TaskEditionDialogProps = {\n  task: Task | undefined;\n  onClose: () => void;\n};\n\n/** Enables editing a task. Responsible for creating or updating the task. Calls onClose() when done. */\nexport function TaskEditionDialog(props: TaskEditionDialogProps) {\n  const id = useMemo(() => (props.task ? props.task.id : undefined), [props.task]);\n  const [editedTask, setEditedTask] = useState<Task>(props.task || getNewTask());\n  const { createTask, updateTask } = useBoussoleDataService();\n\n  const onSave = () => {\n    if (id) {\n      updateTask(id, editedTask);\n    } else {\n      createTask(editedTask);\n    }\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      title={id ? 'Modifier une tâche' : 'Nouvelle tâche'}\n      buttons={[\n        { text: 'Valider', onclick: onSave },\n        { text: 'Annuler', onclick: props.onClose },\n      ]}\n    >\n      <TaskForm task={editedTask} onChange={setEditedTask} />\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport styles from './Tasks.module.scss';\nimport { useBoussoleDataService } from '../../Services/BoussoleDataService/BoussoleDataServiceProvider';\nimport { newState } from '../../Helpers/tasksHelper';\nimport { Task } from '../../DataModel/Task';\nimport { TaskStateIndicator } from './TaskState/TaskStateIndicator';\nimport { TaskStateEditionDialog } from './TaskState/TaskStateEditionDialog';\nimport { TaskEditionDialog } from './TaskEditionDialog';\n\nexport type TaskComponentProps = {\n  /** The task to be rendered. */\n  task: Task;\n};\n\n/** Renders a single task in the list of tasks. */\nexport const TaskComponent: React.FunctionComponent<TaskComponentProps> = ({ task }) => {\n  const { updateTask } = useBoussoleDataService();\n  const [taskEditDialogOpen, setTaskEditDialogOpen] = React.useState(false);\n  const [stateEditDialogOpen, setStateEditDialogOpen] = React.useState(false);\n\n  return (\n    <>\n      <div onClick={() => setTaskEditDialogOpen(true)} className={styles.task}>\n        <div className={styles.title}>{task.title}</div>\n        <TaskStateIndicator state={task.state} onClick={() => setStateEditDialogOpen(true)} />\n      </div>\n      {taskEditDialogOpen && <TaskEditionDialog task={task} onClose={() => setTaskEditDialogOpen(false)} />}\n      {stateEditDialogOpen && (\n        <TaskStateEditionDialog\n          state={task.state}\n          onClose={(state) => {\n            setStateEditDialogOpen(false);\n            if (state) updateTask(task.id, newState(state));\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\r\nimport { BoussoleData } from '../../DataModel/BoussoleData';\r\nimport { useBoussoleDataState } from '../BoussoleDataState/BoussoleDataStateProvider';\r\n\r\nconst BoussoleDataContext = React.createContext<BoussoleData>(undefined as any);\r\n\r\nexport const BoussoleDataProvider: React.FC = ({ children }) => {\r\n  var boussoleDataState = useBoussoleDataState();\r\n  const [boussoleData, setBoussoleData] = React.useState<BoussoleData>(boussoleDataState.getState());\r\n\r\n  React.useEffect(() => boussoleDataState.subscribe(setBoussoleData), [boussoleDataState]);\r\n\r\n  return <BoussoleDataContext.Provider value={boussoleData}>{children}</BoussoleDataContext.Provider>;\r\n};\r\n\r\nexport const useBoussoleData = () => {\r\n  const boussoleData = React.useContext(BoussoleDataContext);\r\n  if (!boussoleData) {\r\n    throw new Error('Please define a BoussoleDataProvider upper in the component tree.');\r\n  }\r\n  return boussoleData;\r\n};\r\n","import React from 'react';\nexport const SaveImage = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    shapeRendering=\"geometricPrecision\"\n    textRendering=\"geometricPrecision\"\n    imageRendering=\"optimizeQuality\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    viewBox=\"0 0 640 640\"\n    {...props}\n  >\n    <path d=\"M626.689 15.414zm-55.654 574.472v.011H459.336c-2.09 0-3.79-1.689-3.79-3.767V416.97l-.013-.508c0-4.701-.862-8.599-2.575-11.587a23.657 23.657 0 0 0-1.05-1.618 13.646 13.646 0 0 0-1.23-1.394l-.105-.13c-1.571-1.559-3.544-2.764-5.859-3.59l-1.287-.39-.201-.071h-.035c-2.15-.579-4.571-.874-7.205-.886h-.26l-.402-.012H204.262c-4.618 0-8.433.886-11.35 2.528l-.095.07-1.382.875-.212.189c-.485.354-.957.791-1.394 1.193l-.083.094-.035.036c-3.213 3.271-4.82 8.197-4.82 14.705l-.023.2V586.13h-.012c0 2.08-1.724 3.756-3.78 3.756h-63.874a3.744 3.744 0 0 1-2.681-1.11l-62.906-62.894a3.901 3.901 0 0 1-1.512-3.083V69.474l-.024-.402c0-4.323.78-7.949 2.292-10.795h.011c.284-.555.58-1.016.898-1.5l.13-.166a9.743 9.743 0 0 1 1.3-1.535l.046-.083.13-.13h.012c1.323-1.322 2.965-2.35 4.82-3.094l.188-.095.095-.035.082-.06.945-.318v.012l.071-.036c2.197-.708 4.713-1.05 7.512-1.11l.46-.035h54.202c2.079 0 3.791 1.689 3.791 3.767v227.436c0 2.729.237 5.35.697 7.796a36.732 36.732 0 0 0 2.02 6.992l.07.106.013.036v.012a38.87 38.87 0 0 0 3.472 6.52c1.347 2.019 2.894 4.027 4.713 5.905l.118.094.023.036.036.012a38.841 38.841 0 0 0 8.433 6.638l.06.011.07.024.07.035 1.678.886.024.012 2.09.933v.012l.036.012.012.012h.035v.011c1.713.709 3.472 1.347 5.232 1.784h.036l.165.023.047.012h.178l1.346.284v.012c2.362.448 4.854.708 7.382.732l.106-.012h309.181c5.386 0 10.323-.933 14.847-2.787l.07-.048c4.536-1.866 8.682-4.677 12.473-8.421l.142-.177c1.866-1.878 3.579-3.91 4.996-6.024a36.432 36.432 0 0 0 3.45-6.342l.011-.06.035-.059.036-.118a35.794 35.794 0 0 0 2.138-6.98l.023-.142c.46-2.457.685-5.067.685-7.772V53.871c0-2.079 1.725-3.78 3.827-3.78h53.765c3.047 0 5.693.367 8.008 1.075 2.492.78 4.618 2.032 6.26 3.674 1.346 1.334 2.433 3.023 3.189 4.972l-.024.012.07.095.32.909h-.024l.06.13c.72 2.138 1.05 4.654 1.11 7.406l.047.448v.284l-.024.082v501.727c0 2.906-.378 5.587-1.075 7.855l-.059.165v.012l-.012.118-.413 1.122h-.012l-.118.296-.472 1.039-.071.2-.13.213-.012-.012-.154.308-.755 1.169h-.012l-.26.401-.732.898-.32.354c-.767.815-1.7 1.56-2.74 2.186a17.6 17.6 0 0 1-2.881 1.358l-.331.118c-.839.283-1.76.52-2.74.72l-.095.012-.059.012-.094.024-.45.07-.106.024h-.023l-.083.012c-1.17.165-2.54.283-3.957.307h-.696zM467.912 51.155l-296.248-1.063V262.42h-.024c0 2.386.295 4.465.886 6.272.154.295.224.543.343.78a10.107 10.107 0 0 0 2.078 3.153l.154.142v.011c.295.296.59.544.874.768.307.26.697.496 1.063.709 2.055 1.193 4.795 1.76 8.232 1.76v.011l269 1.312v-.012h.023v.012c4.724 0 8.197-1.099 10.346-3.308 2.186-2.22 3.284-5.716 3.296-10.535h-.024V51.155zM221.177 426.502h79.23v.023c1.842 0 3.377 1.5 3.377 3.343V586.53c0 1.843-1.535 3.367-3.378 3.367h-79.23v-.012c-1.83 0-3.365-1.512-3.365-3.355V429.868c0-1.842 1.535-3.366 3.366-3.366zm405.596 197.672zm-576.15-622h543.55c6.355 0 12.237 1.122 17.67 3.342l2.646 1.17c4.394 2.137 8.469 5.066 12.272 8.799l3.39 3.85 2.929 4.075c4.594 7.217 6.933 15.425 6.933 24.591v543.538c0 6.33-1.122 12.225-3.354 17.693-2.21 5.445-5.516 10.418-9.922 14.988a46.306 46.306 0 0 1-7.724 6.32l-1.323.885a40.453 40.453 0 0 1-5.823 2.989c-5.457 2.29-11.35 3.413-17.705 3.413H90.475l-1.276-1.287-83.576-83.576-5.48-3.638V47.846C-1.7 27.544 14.683 7.89 32.907 5.493c5.469-2.209 11.374-3.319 17.717-3.319z\" />\n  </svg>\n);\n","import React from 'react';\nimport styles from './App.module.scss';\nimport { Link } from 'react-router-dom';\nimport { SaveImage } from '../../Assets/SaveImage';\nimport { getClasses } from '../../Helpers/cssHelper';\nimport { useAutoSaver } from '../../Services/AutoSaver/AutoSaver';\n\ntype PageLayoutProps = {\n  /** optional header controls to be rendered */\n  headerControls?: React.ReactElement;\n};\n\n/** renders a header with various buttons and the children as the content */\nexport const PageLayout: React.FunctionComponent<PageLayoutProps> = ({ headerControls, children }) => {\n  var saveStatus = useAutoSaver();\n\n  return (\n    <>\n      <header>\n        <Link to=\"/home\">Home</Link>\n        <Link to=\"/tasks\">Tâches</Link>\n        <span\n          title={saveStatus === 'saving' ? \"En cours d'enregistrement...\" : 'Toutes les données sont sauvegardées.'}\n        >\n          <SaveImage\n            className={getClasses(styles.saveButton, saveStatus === 'saving' && styles.saving)}\n            height={20}\n            width={20}\n          />\n        </span>\n        {headerControls}\n      </header>\n      <section>{children}</section>\n    </>\n  );\n};\n","import React from 'react';\r\nimport { BoussoleData } from '../../DataModel/BoussoleData';\r\nimport { AutoSaverStatus } from './AutoSaverStatus';\r\nimport { useBoussoleDataStore } from '../BoussoleDataStore/BoussoleDataStoreProvider';\r\nimport { useBoussoleDataState } from '../BoussoleDataState/BoussoleDataStateProvider';\r\n\r\ntype AutoSaverState = {\r\n  // the model being saved. Undefined if no model needs to be saved.\r\n  modelBeingSaved?: BoussoleData;\r\n  // A model queued to be saved, if a save operation is already ongoing (modelBeingSaved is thus not undefined), undefined otherwise.\r\n  modelToSave?: BoussoleData;\r\n};\r\n\r\nexport const useAutoSaver = (): AutoSaverStatus => {\r\n  const boussoleDataStore = useBoussoleDataStore();\r\n  const boussoleDataState = useBoussoleDataState();\r\n  const state = React.useRef<AutoSaverState>({});\r\n  const [saveStatus, setSaveStatus] = React.useState<AutoSaverStatus>('all-saved');\r\n\r\n  const onModelChange = React.useCallback(\r\n    (model: BoussoleData) => {\r\n      if (state.current.modelBeingSaved) {\r\n        // a save operation is already ongoing. Queue the model to be saved, overwriting an older version already queued (if any).\r\n        state.current.modelToSave = model;\r\n        return;\r\n      }\r\n\r\n      (async () => {\r\n        state.current = { modelBeingSaved: model };\r\n        setSaveStatus('saving');\r\n        await boussoleDataStore.saveData(model);\r\n\r\n        while (state.current.modelToSave) {\r\n          state.current = { modelBeingSaved: model };\r\n          await boussoleDataStore.saveData(model);\r\n        }\r\n\r\n        state.current = {};\r\n        setSaveStatus('all-saved');\r\n      })();\r\n    },\r\n    [boussoleDataStore]\r\n  );\r\n\r\n  React.useEffect(() => boussoleDataState.subscribe(onModelChange), [boussoleDataState, onModelChange]);\r\n  return saveStatus;\r\n};\r\n","import React from 'react';\nexport const FilterImage = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg {...props} viewBox=\"0 0 10 10\">\n    <path\n      d=\"M 0.25,1.5 4.25,6 v 3.75 H 5.75 V 6 l 4,-4.5 v -1.25 l -9.5,0 z\"\n      fill=\"none\"\n      strokeWidth={0.5}\n      strokeLinecap=\"butt\"\n      strokeLinejoin=\"miter\"\n      strokeMiterlimit={4}\n    />\n  </svg>\n);\n","import React from 'react';\nimport styles from './Tasks.module.scss';\nimport { getClasses } from '../../Helpers/cssHelper';\nimport { TagControl } from '../Tags/TagControl';\nimport { TagEditionDialog } from '../Tags/TagEditionDialog';\nimport { TagComponent } from '../Tags/TagComponent';\n\nexport type TaskFilterValue = {\n  text: string;\n  /** tasks with that ID must be displayed. null means \"tasks with no tag\". undefined means \"do not filter on tag\". */\n  tagId: string | undefined | null;\n};\n\ntype TaskFilterProps = {\n  visible: boolean;\n  value: TaskFilterValue;\n  onChange: (filter: TaskFilterValue) => void;\n};\n\nexport const TaskFilter: React.FunctionComponent<TaskFilterProps> = ({ visible, value, onChange }) => {\n  var textRef = React.useRef<HTMLInputElement | null>(null);\n  const [tagEditFormOpen, setTagEditFormOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    if (visible && textRef.current) {\n      textRef.current.focus();\n    }\n  }, [visible]);\n\n  return (\n    <div className={getClasses(styles.tasksFilter, visible && styles.visible)}>\n      <div className={styles.tasksFilterInner}>\n        <input\n          ref={textRef}\n          className={styles.taskFilterText}\n          value={value.text}\n          onChange={(ev) => onChange({ ...value, text: ev.target.value })}\n        />\n        {value.tagId === undefined ? (\n          <TagControl text=\"...\" noTag onClick={() => setTagEditFormOpen(true)} />\n        ) : (\n          <TagComponent\n            tagId={value.tagId}\n            active\n            onClick={() => setTagEditFormOpen(true)}\n            onRemove={() => onChange({ ...value, tagId: undefined })}\n          />\n        )}\n      </div>\n      {tagEditFormOpen && (\n        <TagEditionDialog\n          tagId={value.tagId}\n          onChange={(tagId) => {\n            onChange({ ...value, tagId });\n            setTagEditFormOpen(false);\n          }}\n          onClose={() => setTagEditFormOpen(false)}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './Tasks.module.scss';\nimport { TaskComponent } from './TaskComponent';\nimport { TaskEditionDialog } from './TaskEditionDialog';\nimport { BoussoleData } from '../../DataModel/BoussoleData';\nimport { useBoussoleData } from '../../Services/BoussoleData/BoussoleDataProvider';\nimport { Task, TaskState } from '../../DataModel/Task';\nimport { Button } from '../Utility/Button/Button';\nimport { PageLayout } from '../App/PageLayout';\nimport { FilterImage } from '../../Assets/FilterImage';\nimport { TaskFilter, TaskFilterValue } from './TaskFilter';\n\nfunction getStateOrder(state: TaskState): number {\n  switch (state) {\n    case 'active':\n      return 0;\n    case 'in-backlog':\n      return 1;\n    case 'created':\n      return 2;\n    case 'finished':\n      return 3;\n    case 'abandoned':\n      return 4;\n  }\n}\n\nfunction compare(task1: Task, task2: Task): number {\n  if (task1.state !== task2.state) {\n    return getStateOrder(task1.state) < getStateOrder(task2.state) ? -1 : 1;\n  }\n\n  // both tasks have the same state\n\n  return task1.title.localeCompare(task2.title);\n}\n\nfunction toComparable(text: string): string {\n  return text\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction sortAndFilterTasks(boussoleData: BoussoleData, filter?: TaskFilterValue): Task[] {\n  var result = Object.keys(boussoleData)\n    .map((id) => boussoleData[id])\n    .sort(compare);\n\n  if (filter) {\n    const text = filter.text ? toComparable(filter.text) : undefined;\n    result = result.filter((task) => {\n      if (text && !toComparable(task.title).includes(text) && !toComparable(task.description).includes(text)) {\n        return false;\n      }\n\n      if (filter.tagId !== undefined && task.tagId !== filter.tagId) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return result;\n}\n\n/** page with the list of tasks, a filter, a \"new task\" button and an edition dialog, if needed. */\nexport function TaskList() {\n  var boussoleData = useBoussoleData();\n  const [filterVisible, setFilterVisible] = React.useState<boolean>(false);\n  const [filterValue, setFilterValue] = React.useState<TaskFilterValue>({ text: '', tagId: undefined });\n  const [newTaskFormOpen, setNewTaskFormOpen] = React.useState(false);\n\n  /*React.useEffect(() => {\n    (async () => {\n      try {\n        setData(await getData());\n      } catch (error) {\n        setData(error.toString());\n      }\n    })();\n  }, []);*/\n\n  return (\n    <PageLayout\n      headerControls={\n        <Button onClick={() => setFilterVisible(!filterVisible)} isLight={true} title=\"Filtrer\">\n          <FilterImage height={20} width={20} stroke=\"white\" />\n        </Button>\n      }\n    >\n      <div className={styles.taskList}>\n        <TaskFilter visible={filterVisible} value={filterValue} onChange={setFilterValue} />\n        <div className={styles.tasks}>\n          {sortAndFilterTasks(boussoleData, filterVisible ? filterValue : undefined).map((task) => (\n            <TaskComponent key={task.id} task={task} />\n          ))}\n        </div>\n        <div className={styles.tasksButtons}>\n          <Button isWide onClick={() => setNewTaskFormOpen(true)}>\n            +\n          </Button>\n        </div>\n        {newTaskFormOpen && <TaskEditionDialog task={undefined} onClose={() => setNewTaskFormOpen(false)} />}\n      </div>\n    </PageLayout>\n  );\n}\n","import React from 'react';\nimport styles from './IconDesigner.module.scss';\n\nexport interface IIconPreviewProps {\n  svg: string;\n  size: number;\n}\n\nexport const IconPreview: React.FunctionComponent<IIconPreviewProps> = ({ svg, size }) => {\n  return (\n    <div className={styles.iconPreview}>\n      <div\n        dangerouslySetInnerHTML={{ __html: svg }}\n        style={{\n          height: size,\n          width: size,\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './IconDesigner.module.scss';\nimport { IconPreview } from './IconPreview';\n\nexport const IconDesigner: React.FunctionComponent = () => {\n  var [svgValue, setSvgValue] = React.useState('');\n\n  return (\n    <div className={styles.iconDesigner}>\n      <textarea value={svgValue} onChange={(ev) => setSvgValue(ev.target.value)} />\n      <IconPreview svg={svgValue} size={200} />\n      <IconPreview svg={svgValue} size={100} />\n      <IconPreview svg={svgValue} size={50} />\n      <IconPreview svg={svgValue} size={32} />\n      <IconPreview svg={svgValue} size={25} />\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './App.module.scss';\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { TaskList } from '../Tasks/TaskList';\nimport { PageLayout } from './PageLayout';\nimport { IconDesigner } from '../IconDesigner/IconDesigner';\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return <>Invalid path: « {location.pathname} »</>;\n}\n\nexport const AppComponent = () => {\n  return (\n    <div className={styles.app}>\n      <ErrorBoundary>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/tasks\" />\n          </Route>\n          <Route path=\"/home\" exact>\n            <PageLayout>\n              Home page\n              <IconDesigner />\n            </PageLayout>\n          </Route>\n          <Route path=\"/tasks\" exact>\n            <TaskList />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </ErrorBoundary>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './LoadStatus.module.scss';\nimport logo from '../../Assets/boussole.svg';\n\nexport type LoadStatusProps = {\n  done: number;\n  total: number;\n  message: string;\n};\n\nexport const LoadStatus: React.FC<LoadStatusProps> = ({ done, total, message }) => {\n  const rects: JSX.Element[] = [];\n\n  for (var i = 0; i < total; i++) {\n    rects.push(\n      <rect\n        x={i * 120}\n        y=\"2.5\"\n        width=\"95\"\n        height=\"95\"\n        rx=\"25\"\n        ry=\"25\"\n        style={{\n          fill: i < done ? 'rgb(125, 160, 191)' : 'rgb(255, 255, 255)',\n          strokeWidth: 5,\n          stroke: 'rgb(67, 106, 140)',\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.loadStatus}>\n      <img src={logo} alt=\"logo\" />\n      <svg className={styles.loadBar} viewBox={`0 0 ${total * 120 - 20} 100`}>\n        {rects}\n      </svg>\n      {message}\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// window.addEventListener('beforeunload', (event) => {\n//   // Cancel the event as stated by the standard.\n//   event.preventDefault();\n//   // Chrome requires returnValue to be set.\n//   event.returnValue = '';\n// });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { AppComponent } from './AppComponent';\nimport { AuthManagerProvider } from '../../Services/Auth/AuthManagerProvider';\nimport { BoussoleDataStoreProvider } from '../../Services/BoussoleDataStore/BoussoleDataStoreProvider';\nimport { BoussoleDataStateProvider } from '../../Services/BoussoleDataState/BoussoleDataStateProvider';\nimport { BoussoleDataProvider } from '../../Services/BoussoleData/BoussoleDataProvider';\nimport { BoussoleDataServiceProvider } from '../../Services/BoussoleDataService/BoussoleDataServiceProvider';\nimport { LoadStatus } from '../LoadStatus/LoadStatus';\n\nexport const App: React.FC = () => {\n  return (\n    <AuthManagerProvider\n      getNotAuthenticatedComponents={() => <LoadStatus done={0} total={2} message=\"Authentification en cours...\" />}\n      getAuthenticatedComponents={() => (\n        <BoussoleDataStoreProvider>\n          <BoussoleDataStateProvider\n            getNotReadyComponents={() => <LoadStatus done={1} total={2} message=\"Chargement des données...\" />}\n            getReadyComponents={() => (\n              <BoussoleDataProvider>\n                <BoussoleDataServiceProvider>\n                  <Router>\n                    <AppComponent />\n                  </Router>\n                </BoussoleDataServiceProvider>\n              </BoussoleDataProvider>\n            )}\n          />\n        </BoussoleDataStoreProvider>\n      )}\n    />\n  );\n};\n"],"sourceRoot":""}